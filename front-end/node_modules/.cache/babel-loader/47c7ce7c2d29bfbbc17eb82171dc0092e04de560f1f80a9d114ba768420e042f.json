{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Link, useLocation } from 'react-router-dom';\n// import axios from 'axios';\n// import TitleBodyCommunity from './element/TitleBodyCommunity.js';\n// import SelectButtonCommunity from './element/SelectButtonCommunity.js';\n// import ListCommunity from './element/ListCommunity.js';\n// import ColumnListCommunity from './element/ColumnListCommunity.js';\n// import RowListCommunity from './element/RowListCommunity.js';\n// import CreateButtonCommunity from './element/CreateButtonCommunity.js';\n// import PaginationCustom from './element/PaginationCustom.js';\n// import './Community.css';\n// const JoyCommunity = () => {\n//   const [dataList, setDataList] = useState([]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const postsPerPage = 10;\n//   const location = useLocation();\n//   const fetchData = async () => {\n//     try {\n//       // 백엔드에서 게시글 목록을 가져옴\n//       const response = await axios.post(`/joy`);\n//       console.log('응답 데이터:', response.data); // 응답 데이터 출력\n//       setDataList(Array.isArray(response.data) ? response.data : []);\n//     } catch (error) {\n//       console.error('There was an error fetching the posts!', error);\n//     }\n//   };\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n//   useEffect(() => {\n//     if (location.state && location.state.newPost) {\n//       console.log('새 게시글 추가:', location.state.newPost);\n//       setDataList((prevDataList) => [location.state.newPost, ...prevDataList]);\n//     }\n//   }, [location.state]);\n//   const getNextNo = () => {\n//     return dataList.length > 0 ? Math.max(...dataList.map((post) => post.no)) + 1 : 1;\n//   };\n//   const indexOfLastPost = currentPage * postsPerPage;\n//   const indexOfFirstPost = indexOfLastPost - postsPerPage;\n//   const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\n//   const handlePageChange = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n//   return (\n//     <div className=\"CommunityAll_layout\">\n//       <div className=\"CommunityTop_layout\">\n//         <TitleBodyCommunity title=\"기쁨이\" body=\"본인의 챌린지 및 치료 후기를 적어주세요!\" />\n//         <div className=\"SelectButtonCommunity_layout\">\n//           <SelectButtonCommunity />\n//         </div>\n//       </div>\n//       <ListCommunity headersName={['제목', '작성자', '작성일']}>\n//         {currentPosts.length > 0 ? (\n//           currentPosts.map((item, index) => (\n//             <RowListCommunity key={index}>\n//               <ColumnListCommunity>\n//                 <Link to={`/joy/PostView/${item.no}`} style={{ textDecoration: 'none' }}>\n//                   <div className=\"List_title\">{item.title}</div>\n//                 </Link>\n//               </ColumnListCommunity>\n//               <ColumnListCommunity>{item.nickname}</ColumnListCommunity>\n//               <ColumnListCommunity>{item.created_date}</ColumnListCommunity>\n//             </RowListCommunity>\n//           ))\n//         ) : (\n//           <div>게시글이 없습니다.</div>\n//         )}\n//       </ListCommunity>\n//       <CreateButtonCommunity emotion=\"joy\" nextNo={getNextNo()} />\n//       <div className=\"PaginationCustom\">\n//         <PaginationCustom\n//           currentPage={currentPage}\n//           totalPages={Math.ceil(dataList.length / postsPerPage)}\n//           onPageChange={handlePageChange}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n// export default JoyCommunity;\nimport React,{useState,useEffect}from'react';import{Link,useLocation}from'react-router-dom';import axios from'axios';import TitleBodyCommunity from'./element/TitleBodyCommunity.js';import SelectButtonCommunity from'./element/SelectButtonCommunity.js';import ListCommunity from'./element/ListCommunity.js';import ColumnListCommunity from'./element/ColumnListCommunity.js';import RowListCommunity from'./element/RowListCommunity.js';import CreateButtonCommunity from'./element/CreateButtonCommunity.js';import PaginationCustom from'./element/PaginationCustom.js';import'./Community.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JoyCommunity=()=>{const[dataList,setDataList]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[searchKeyword,setSearchKeyword]=useState('');const postsPerPage=10;const location=useLocation();const fetchData=async function(){let keyword=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const endpoint=keyword?\"/joy/search?keyword=\".concat(encodeURIComponent(keyword)):'/joy';const response=await axios.get(endpoint);console.log('응답 데이터:',response.data);setDataList(Array.isArray(response.data)?response.data:[]);}catch(error){console.error('There was an error fetching the posts!',error);}};useEffect(()=>{fetchData();},[]);useEffect(()=>{if(location.state&&location.state.newPost){console.log('새 게시글 추가:',location.state.newPost);setDataList(prevDataList=>[location.state.newPost,...prevDataList]);}},[location.state]);const getNextNo=()=>{return dataList.length>0?Math.max(...dataList.map(post=>post.no))+1:1;};const indexOfLastPost=currentPage*postsPerPage;const indexOfFirstPost=indexOfLastPost-postsPerPage;const currentPosts=dataList.slice(indexOfFirstPost,indexOfLastPost);const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);};const handleSearch=e=>{e.preventDefault();fetchData(searchKeyword);};return/*#__PURE__*/_jsxs(\"div\",{className:\"CommunityAll_layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"CommunityTop_layout\",children:[/*#__PURE__*/_jsx(TitleBodyCommunity,{title:\"\\uAE30\\uC068\\uC774\",body:\"\\uBCF8\\uC778\\uC758 \\uCC4C\\uB9B0\\uC9C0 \\uBC0F \\uCE58\\uB8CC \\uD6C4\\uAE30\\uB97C \\uC801\\uC5B4\\uC8FC\\uC138\\uC694!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"SelectButtonCommunity_layout\",children:/*#__PURE__*/_jsx(SelectButtonCommunity,{})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"SearchForm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchKeyword,onChange:e=>setSearchKeyword(e.target.value),placeholder:\"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uAC80\\uC0C9\"})]})]}),/*#__PURE__*/_jsx(ListCommunity,{headersName:['제목','작성자','작성일'],children:currentPosts.length>0?currentPosts.map((item,index)=>/*#__PURE__*/_jsxs(RowListCommunity,{children:[/*#__PURE__*/_jsx(ColumnListCommunity,{children:/*#__PURE__*/_jsx(Link,{to:\"/joy/PostView/\".concat(item.no),style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(\"div\",{className:\"List_title\",children:item.title})})}),/*#__PURE__*/_jsx(ColumnListCommunity,{children:item.nickname}),/*#__PURE__*/_jsx(ColumnListCommunity,{children:item.created_date})]},index)):/*#__PURE__*/_jsx(\"div\",{children:\"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})}),/*#__PURE__*/_jsx(CreateButtonCommunity,{emotion:\"joy\",nextNo:getNextNo()}),/*#__PURE__*/_jsx(\"div\",{className:\"PaginationCustom\",children:/*#__PURE__*/_jsx(PaginationCustom,{currentPage:currentPage,totalPages:Math.ceil(dataList.length/postsPerPage),onPageChange:handlePageChange})})]});};export default JoyCommunity;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","axios","TitleBodyCommunity","SelectButtonCommunity","ListCommunity","ColumnListCommunity","RowListCommunity","CreateButtonCommunity","PaginationCustom","jsx","_jsx","jsxs","_jsxs","JoyCommunity","dataList","setDataList","currentPage","setCurrentPage","searchKeyword","setSearchKeyword","postsPerPage","location","fetchData","keyword","arguments","length","undefined","endpoint","concat","encodeURIComponent","response","get","console","log","data","Array","isArray","error","state","newPost","prevDataList","getNextNo","Math","max","map","post","no","indexOfLastPost","indexOfFirstPost","currentPosts","slice","handlePageChange","pageNumber","handleSearch","e","preventDefault","className","children","title","body","onSubmit","type","value","onChange","target","placeholder","headersName","item","index","to","style","textDecoration","nickname","created_date","emotion","nextNo","totalPages","ceil","onPageChange"],"sources":["C:/camputhon_practice/project2-검색/front-end/src/components/community/JoyCommunity.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link, useLocation } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// import TitleBodyCommunity from './element/TitleBodyCommunity.js';\r\n// import SelectButtonCommunity from './element/SelectButtonCommunity.js';\r\n// import ListCommunity from './element/ListCommunity.js';\r\n// import ColumnListCommunity from './element/ColumnListCommunity.js';\r\n// import RowListCommunity from './element/RowListCommunity.js';\r\n// import CreateButtonCommunity from './element/CreateButtonCommunity.js';\r\n// import PaginationCustom from './element/PaginationCustom.js';\r\n\r\n// import './Community.css';\r\n\r\n// const JoyCommunity = () => {\r\n//   const [dataList, setDataList] = useState([]);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const postsPerPage = 10;\r\n//   const location = useLocation();\r\n\r\n//   const fetchData = async () => {\r\n//     try {\r\n//       // 백엔드에서 게시글 목록을 가져옴\r\n//       const response = await axios.post(`/joy`);\r\n//       console.log('응답 데이터:', response.data); // 응답 데이터 출력\r\n//       setDataList(Array.isArray(response.data) ? response.data : []);\r\n//     } catch (error) {\r\n//       console.error('There was an error fetching the posts!', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (location.state && location.state.newPost) {\r\n//       console.log('새 게시글 추가:', location.state.newPost);\r\n//       setDataList((prevDataList) => [location.state.newPost, ...prevDataList]);\r\n//     }\r\n//   }, [location.state]);\r\n\r\n//   const getNextNo = () => {\r\n//     return dataList.length > 0 ? Math.max(...dataList.map((post) => post.no)) + 1 : 1;\r\n//   };\r\n\r\n//   const indexOfLastPost = currentPage * postsPerPage;\r\n//   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n//   const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n//   const handlePageChange = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"CommunityAll_layout\">\r\n//       <div className=\"CommunityTop_layout\">\r\n//         <TitleBodyCommunity title=\"기쁨이\" body=\"본인의 챌린지 및 치료 후기를 적어주세요!\" />\r\n//         <div className=\"SelectButtonCommunity_layout\">\r\n//           <SelectButtonCommunity />\r\n//         </div>\r\n//       </div>\r\n//       <ListCommunity headersName={['제목', '작성자', '작성일']}>\r\n//         {currentPosts.length > 0 ? (\r\n//           currentPosts.map((item, index) => (\r\n//             <RowListCommunity key={index}>\r\n//               <ColumnListCommunity>\r\n//                 <Link to={`/joy/PostView/${item.no}`} style={{ textDecoration: 'none' }}>\r\n//                   <div className=\"List_title\">{item.title}</div>\r\n//                 </Link>\r\n//               </ColumnListCommunity>\r\n//               <ColumnListCommunity>{item.nickname}</ColumnListCommunity>\r\n//               <ColumnListCommunity>{item.created_date}</ColumnListCommunity>\r\n//             </RowListCommunity>\r\n//           ))\r\n//         ) : (\r\n//           <div>게시글이 없습니다.</div>\r\n//         )}\r\n//       </ListCommunity>\r\n//       <CreateButtonCommunity emotion=\"joy\" nextNo={getNextNo()} />\r\n//       <div className=\"PaginationCustom\">\r\n//         <PaginationCustom\r\n//           currentPage={currentPage}\r\n//           totalPages={Math.ceil(dataList.length / postsPerPage)}\r\n//           onPageChange={handlePageChange}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JoyCommunity;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport TitleBodyCommunity from './element/TitleBodyCommunity.js';\r\nimport SelectButtonCommunity from './element/SelectButtonCommunity.js';\r\nimport ListCommunity from './element/ListCommunity.js';\r\nimport ColumnListCommunity from './element/ColumnListCommunity.js';\r\nimport RowListCommunity from './element/RowListCommunity.js';\r\nimport CreateButtonCommunity from './element/CreateButtonCommunity.js';\r\nimport PaginationCustom from './element/PaginationCustom.js';\r\n\r\nimport './Community.css';\r\n\r\nconst JoyCommunity = () => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const postsPerPage = 10;\r\n  const location = useLocation();\r\n\r\n  const fetchData = async (keyword = '') => {\r\n    try {\r\n      const endpoint = keyword ? `/joy/search?keyword=${encodeURIComponent(keyword)}` : '/joy';\r\n      const response = await axios.get(endpoint);\r\n      console.log('응답 데이터:', response.data);\r\n      setDataList(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the posts!', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.newPost) {\r\n      console.log('새 게시글 추가:', location.state.newPost);\r\n      setDataList((prevDataList) => [location.state.newPost, ...prevDataList]);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const getNextNo = () => {\r\n    return dataList.length > 0 ? Math.max(...dataList.map((post) => post.no)) + 1 : 1;\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchData(searchKeyword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"CommunityAll_layout\">\r\n      <div className=\"CommunityTop_layout\">\r\n        <TitleBodyCommunity title=\"기쁨이\" body=\"본인의 챌린지 및 치료 후기를 적어주세요!\" />\r\n        <div className=\"SelectButtonCommunity_layout\">\r\n          <SelectButtonCommunity />\r\n        </div>\r\n        <form onSubmit={handleSearch} className=\"SearchForm\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchKeyword}\r\n            onChange={(e) => setSearchKeyword(e.target.value)}\r\n            placeholder=\"검색어를 입력하세요\"\r\n          />\r\n          <button type=\"submit\">검색</button>\r\n        </form>\r\n      </div>\r\n      <ListCommunity headersName={['제목', '작성자', '작성일']}>\r\n        {currentPosts.length > 0 ? (\r\n          currentPosts.map((item, index) => (\r\n            <RowListCommunity key={index}>\r\n              <ColumnListCommunity>\r\n                <Link to={`/joy/PostView/${item.no}`} style={{ textDecoration: 'none' }}>\r\n                  <div className=\"List_title\">{item.title}</div>\r\n                </Link>\r\n              </ColumnListCommunity>\r\n              <ColumnListCommunity>{item.nickname}</ColumnListCommunity>\r\n              <ColumnListCommunity>{item.created_date}</ColumnListCommunity>\r\n            </RowListCommunity>\r\n          ))\r\n        ) : (\r\n          <div>게시글이 없습니다.</div>\r\n        )}\r\n      </ListCommunity>\r\n      <CreateButtonCommunity emotion=\"joy\" nextNo={getNextNo()} />\r\n      <div className=\"PaginationCustom\">\r\n        <PaginationCustom\r\n          currentPage={currentPage}\r\n          totalPages={Math.ceil(dataList.length / postsPerPage)}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoyCommunity;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}