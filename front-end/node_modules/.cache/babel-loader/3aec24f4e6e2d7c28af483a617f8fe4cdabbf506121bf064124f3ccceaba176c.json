{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Login.css';import{Link,useNavigate}from'react-router-dom';import loginUser from'../images/loginuser.png';import axios from'axios';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[isLoggedIn,setIsLoggedIn]=useState(false);const navigate=useNavigate();useEffect(()=>{checkLoginStatus();// 초기 로그인 상태 체크\n},[]);const checkLoginStatus=async()=>{try{// 사용자가 로그인한 상태인지 서버에 요청\nconst response=await axios.get('/process/check-login',{withCredentials:true// 쿠키를 서버로 전송\n});const{loggedIn}=response.data;setIsLoggedIn(loggedIn);}catch(error){console.error('로그인 상태 확인 중 오류 발생:',error);}};const handleLogout=async()=>{try{const response=await axios.post('/process/logout',null,{withCredentials:true// 쿠키를 서버로 전송\n});if(response.status===200){setIsLoggedIn(false);// 로그아웃 처리 후 로그인 상태 변경\nnavigate('/');}}catch(error){console.error('로그아웃 중 오류 발생:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"loginPosition\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"loginUserImg\",src:loginUser,alt:\"\"}),isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4!\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mainlogoutBtn\",onClick:handleLogout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"loginPositionBtn\",children:[/*#__PURE__*/_jsx(Link,{to:\"/Loginpage\",className:\"loginLink\",children:/*#__PURE__*/_jsx(\"button\",{className:\"loginBtn\",children:\"\\uB85C\\uADF8\\uC778\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/Signuppage\",className:\"signupLink\",children:/*#__PURE__*/_jsx(\"button\",{className:\"signupBtn\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})})]})]});}export default Login;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","loginUser","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Login","isLoggedIn","setIsLoggedIn","navigate","checkLoginStatus","response","get","withCredentials","loggedIn","data","error","console","handleLogout","post","status","className","children","src","alt","onClick","to"],"sources":["C:/Users/atwod/OneDrive/바탕 화면/동국대 폴더/백엔드 공부/실전 2차/HackathonProject2_OutsideIn_UPGRADED/front-end/src/components/home/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Login.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport loginUser from '../images/loginuser.png';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkLoginStatus(); // 초기 로그인 상태 체크\r\n  }, []);\r\n\r\n  const checkLoginStatus = async () => {\r\n    try {\r\n      // 사용자가 로그인한 상태인지 서버에 요청\r\n      const response = await axios.get('/process/check-login', {\r\n        withCredentials: true, // 쿠키를 서버로 전송\r\n      });\r\n      const { loggedIn } = response.data;\r\n\r\n      setIsLoggedIn(loggedIn);\r\n    } catch (error) {\r\n      console.error('로그인 상태 확인 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await axios.post('/process/logout', null, {\r\n        withCredentials: true, // 쿠키를 서버로 전송\r\n      });\r\n      if (response.status === 200) {\r\n        setIsLoggedIn(false); // 로그아웃 처리 후 로그인 상태 변경\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('로그아웃 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginPosition\">\r\n      <img className=\"loginUserImg\" src={loginUser} alt=\"\"></img>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <p>환영합니다!</p>\r\n          <button className=\"mainlogoutBtn\" onClick={handleLogout}>\r\n            로그아웃\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <div className=\"loginPositionBtn\">\r\n          <Link to=\"/Loginpage\" className=\"loginLink\">\r\n            <button className=\"loginBtn\">로그인</button>\r\n          </Link>\r\n          <br />\r\n          <Link to=\"/Signuppage\" className=\"signupLink\">\r\n            <button className=\"signupBtn\">회원가입</button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,aAAa,CACpB,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACf,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAAe,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACde,gBAAgB,CAAC,CAAC,CAAE;AACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,sBAAsB,CAAE,CACvDC,eAAe,CAAE,IAAM;AACzB,CAAC,CAAC,CACF,KAAM,CAAEC,QAAS,CAAC,CAAGH,QAAQ,CAACI,IAAI,CAElCP,aAAa,CAACM,QAAQ,CAAC,CACzB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACoB,IAAI,CAAC,iBAAiB,CAAE,IAAI,CAAE,CACzDN,eAAe,CAAE,IAAM;AACzB,CAAC,CAAC,CACF,GAAIF,QAAQ,CAACS,MAAM,GAAK,GAAG,CAAE,CAC3BZ,aAAa,CAAC,KAAK,CAAC,CAAE;AACtBC,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CACF,CAAC,CAED,mBACEX,KAAA,QAAKgB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BrB,IAAA,QAAKoB,SAAS,CAAC,cAAc,CAACE,GAAG,CAAEzB,SAAU,CAAC0B,GAAG,CAAC,EAAE,CAAM,CAAC,CAC1DjB,UAAU,cACTF,KAAA,CAAAF,SAAA,EAAAmB,QAAA,eACErB,IAAA,MAAAqB,QAAA,CAAG,iCAAM,CAAG,CAAC,cACbrB,IAAA,WAAQoB,SAAS,CAAC,eAAe,CAACI,OAAO,CAAEP,YAAa,CAAAI,QAAA,CAAC,0BAEzD,CAAQ,CAAC,EACT,CAAC,cAEHjB,KAAA,QAAKgB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BrB,IAAA,CAACL,IAAI,EAAC8B,EAAE,CAAC,YAAY,CAACL,SAAS,CAAC,WAAW,CAAAC,QAAA,cACzCrB,IAAA,WAAQoB,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,oBAAG,CAAQ,CAAC,CACrC,CAAC,cACPrB,IAAA,QAAK,CAAC,cACNA,IAAA,CAACL,IAAI,EAAC8B,EAAE,CAAC,aAAa,CAACL,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC3CrB,IAAA,WAAQoB,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,0BAAI,CAAQ,CAAC,CACvC,CAAC,EACJ,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAAhB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}