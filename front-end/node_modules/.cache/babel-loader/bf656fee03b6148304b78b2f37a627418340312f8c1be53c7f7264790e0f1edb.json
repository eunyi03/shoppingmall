{"ast":null,"code":"var _jsxFileName = \"/Users/iyeeun/Documents/shop_db/front-end/src/components/community/NoticeCommunity.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport TitleBodyCommunity from './element/TitleBodyCommunity.js';\nimport SelectButtonCommunity from './element/SelectButtonCommunity.js';\nimport ListCommunity from './element/ListCommunity.js';\nimport ColumnListCommunity from './element/ColumnListCommunity.js';\nimport RowListCommunity from './element/RowListCommunity.js';\nimport CreateButtonCommunity from './element/CreateButtonCommunity.js';\nimport PaginationCustom from './element/PaginationCustom.js';\nimport './Community.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoticeCommunity = () => {\n  _s();\n  const [dataList, setDataList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 10;\n  const location = useLocation();\n  const fetchData = async () => {\n    try {\n      // 백엔드에서 게시글 목록을 가져옴\n      const response = await axios.post(`/notice`);\n      console.log('응답 데이터:', response.data); // 응답 데이터 출력\n      setDataList(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the posts!', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (location.state && location.state.newPost) {\n      console.log('새 게시글 추가:', location.state.newPost);\n      setDataList(prevDataList => [location.state.newPost, ...prevDataList]);\n    }\n  }, [location.state]);\n  const getNextNo = () => {\n    return dataList.length > 0 ? Math.max(...dataList.map(post => post.no)) + 1 : 1;\n  };\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CommunityAll_layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CommunityTop_layout\",\n      children: [/*#__PURE__*/_jsxDEV(TitleBodyCommunity, {\n        title: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\",\n        body: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uC744 \\uD655\\uC778\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SelectButtonCommunity_layout\",\n        children: /*#__PURE__*/_jsxDEV(SelectButtonCommunity, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListCommunity, {\n      headersName: ['제목', '작성자', '작성일'],\n      children: currentPosts.length > 0 ? currentPosts.map((item, index) => /*#__PURE__*/_jsxDEV(RowListCommunity, {\n        children: [/*#__PURE__*/_jsxDEV(ColumnListCommunity, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/notice/PostView/${item.no}`,\n            style: {\n              textDecoration: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"List_title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ColumnListCommunity, {\n          children: item.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ColumnListCommunity, {\n          children: item.created_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateButtonCommunity, {\n      emotion: \"notice\",\n      nextNo: getNextNo()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PaginationCustom\",\n      children: /*#__PURE__*/_jsxDEV(PaginationCustom, {\n        currentPage: currentPage,\n        totalPages: Math.ceil(dataList.length / postsPerPage),\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(NoticeCommunity, \"T8gWtOccfz42H5ZabSprhARKAdw=\", false, function () {\n  return [useLocation];\n});\n_c = NoticeCommunity;\nexport default NoticeCommunity;\nvar _c;\n$RefreshReg$(_c, \"NoticeCommunity\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","axios","TitleBodyCommunity","SelectButtonCommunity","ListCommunity","ColumnListCommunity","RowListCommunity","CreateButtonCommunity","PaginationCustom","jsxDEV","_jsxDEV","NoticeCommunity","_s","dataList","setDataList","currentPage","setCurrentPage","postsPerPage","location","fetchData","response","post","console","log","data","Array","isArray","error","state","newPost","prevDataList","getNextNo","length","Math","max","map","no","indexOfLastPost","indexOfFirstPost","currentPosts","slice","handlePageChange","pageNumber","className","children","title","body","fileName","_jsxFileName","lineNumber","columnNumber","headersName","item","index","to","style","textDecoration","nickname","created_date","emotion","nextNo","totalPages","ceil","onPageChange","_c","$RefreshReg$"],"sources":["/Users/iyeeun/Documents/shop_db/front-end/src/components/community/NoticeCommunity.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nimport TitleBodyCommunity from './element/TitleBodyCommunity.js';\nimport SelectButtonCommunity from './element/SelectButtonCommunity.js';\nimport ListCommunity from './element/ListCommunity.js';\nimport ColumnListCommunity from './element/ColumnListCommunity.js';\nimport RowListCommunity from './element/RowListCommunity.js';\nimport CreateButtonCommunity from './element/CreateButtonCommunity.js';\nimport PaginationCustom from './element/PaginationCustom.js';\n\nimport './Community.css';\n\nconst NoticeCommunity = () => {\n  const [dataList, setDataList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 10;\n  const location = useLocation();\n\n  const fetchData = async () => {\n    try {\n      // 백엔드에서 게시글 목록을 가져옴\n      const response = await axios.post(`/notice`);\n      console.log('응답 데이터:', response.data); // 응답 데이터 출력\n      setDataList(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the posts!', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (location.state && location.state.newPost) {\n      console.log('새 게시글 추가:', location.state.newPost);\n      setDataList((prevDataList) => [location.state.newPost, ...prevDataList]);\n    }\n  }, [location.state]);\n\n  const getNextNo = () => {\n    return dataList.length > 0 ? Math.max(...dataList.map((post) => post.no)) + 1 : 1;\n  };\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"CommunityAll_layout\">\n      <div className=\"CommunityTop_layout\">\n        <TitleBodyCommunity title=\"공지사항\" body=\"공지사항을 확인하세요\" />\n        <div className=\"SelectButtonCommunity_layout\">\n          <SelectButtonCommunity />\n        </div>\n      </div>\n      <ListCommunity headersName={['제목', '작성자', '작성일']}>\n        {currentPosts.length > 0 ? (\n          currentPosts.map((item, index) => (\n            <RowListCommunity key={index}>\n              <ColumnListCommunity>\n                <Link to={`/notice/PostView/${item.no}`} style={{ textDecoration: 'none' }}>\n                  <div className=\"List_title\">{item.title}</div>\n                </Link>\n              </ColumnListCommunity>\n              <ColumnListCommunity>{item.nickname}</ColumnListCommunity>\n              <ColumnListCommunity>{item.created_date}</ColumnListCommunity>\n            </RowListCommunity>\n          ))\n        ) : (\n          <div>게시글이 없습니다.</div>\n        )}\n      </ListCommunity>\n      <CreateButtonCommunity emotion=\"notice\" nextNo={getNextNo()} />\n      <div className=\"PaginationCustom\">\n        <PaginationCustom\n          currentPage={currentPage}\n          totalPages={Math.ceil(dataList.length / postsPerPage)}\n          onPageChange={handlePageChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NoticeCommunity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}