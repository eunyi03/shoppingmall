{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import './CRUD.css';\n// import axios from 'axios';\n// import CRUDHeader from './CRUDHeader';\n// function CreateJoy() {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const { nextNo } = location.state || {};\n//   const [board, setBoard] = useState({\n//     title: '',\n//     body: '',\n//   });\n//   const { title, body } = board;\n//   const onChange = (event) => {\n//     const { value, name } = event.target;\n//     setBoard({\n//       ...board,\n//       [name]: value,\n//     });\n//   };\n//   const saveBoard = async (event) => {\n//     event.preventDefault();\n//     const newPost = {\n//       no: nextNo,\n//       title,\n//       content: body,\n//       created_date: new Date().toISOString(),\n//       board_type: 'joy',\n//     };\n//     try {\n//       const response = await axios.post(`/joy/process/new_Post`, newPost, { withCredentials: true });\n//       const newPostId = response.data.no;\n//       console.log('왜안돼', { newPostId }, { newPost }, response.data);\n//       alert('등록되었습니다.');\n//       navigate(`/joy/PostView/${newPostId}`, { state: { newPost } });\n//     } catch (error) {\n//       console.error('Error saving post:', error);\n//       alert('글을 저장하는 도중 오류가 발생했습니다.');\n//     }\n//   };\n//   const backToList = () => {\n//     navigate('/joy');\n//   };\n//   return (\n//     <div className=\"Create_all\">\n//       <div>\n//         <div className=\"header_layout\">\n//           <CRUDHeader title=\"기쁨이 글쓰기\" />\n//         </div>\n//         <form onSubmit={saveBoard}>\n//           <div className=\"titleBody_layout\">\n//             <div>\n//               <p>\n//                 <span className=\"titleBody_name\">제목</span>\n//               </p>\n//               <input\n//                 className=\"titleInput\"\n//                 type=\"text\"\n//                 name=\"title\"\n//                 placeholder=\"제목을 입력하세요\"\n//                 value={title}\n//                 onChange={onChange}\n//               />\n//             </div>\n//           </div>\n//           <br />\n//           <div className=\"titleBody_layout\">\n//             <div>\n//               <p>\n//                 <span className=\"titleBody_name\">내용</span>\n//               </p>\n//               <textarea\n//                 className=\"BodyInput\"\n//                 name=\"body\"\n//                 placeholder=\"내용을 입력하세요\"\n//                 value={body}\n//                 onChange={onChange}\n//               ></textarea>\n//             </div>\n//           </div>\n//           <br />\n//           <div className=\"btn_layout\">\n//             <button className=\"backBtn\" type=\"button\" onClick={backToList}>\n//               취소\n//             </button>\n//             <input className=\"CreateBtn\" type=\"submit\" value=\"등록하기\"></input>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n// export default CreateJoy;\nimport React,{useState}from'react';import{useNavigate,useLocation}from'react-router-dom';import'./CRUD.css';import axios from'axios';import CRUDHeader from'./CRUDHeader';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CreateJoy(){const navigate=useNavigate();const location=useLocation();const{nextNo}=location.state||{};const[board,setBoard]=useState({title:'',body:''});const[file,setFile]=useState(null);const{title,body}=board;const onChange=event=>{const{value,name}=event.target;setBoard({...board,[name]:value});};const onFileChange=event=>{setFile(event.target.files[0]);};const saveBoard=async event=>{event.preventDefault();const formData=new FormData();formData.append('file',file);formData.append('title',title);formData.append('content',body);formData.append('created_date',new Date().toISOString());formData.append('board_type','joy');try{const response=await axios.post(\"/joy/process/new_Post\",formData,{withCredentials:true,headers:{'Content-Type':'multipart/form-data'}});const newPostId=response.data.no;alert('등록되었습니다.');navigate(\"/joy/PostView/\".concat(newPostId),{state:{newPost:response.data}});}catch(error){console.error('Error saving post:',error);alert('글을 저장하는 도중 오류가 발생했습니다.');}};const backToList=()=>{navigate('/joy');};return/*#__PURE__*/_jsx(\"div\",{className:\"Create_all\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"header_layout\",children:/*#__PURE__*/_jsx(CRUDHeader,{title:\"\\uAE30\\uC068\\uC774 \\uAE00\\uC4F0\\uAE30\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:saveBoard,children:[/*#__PURE__*/_jsx(\"div\",{className:\"titleBody_layout\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"titleBody_name\",children:\"\\uC81C\\uBAA9\"})}),/*#__PURE__*/_jsx(\"input\",{className:\"titleInput\",type:\"text\",name:\"title\",placeholder:\"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",value:title,onChange:onChange})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"titleBody_layout\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"titleBody_name\",children:\"\\uB0B4\\uC6A9\"})}),/*#__PURE__*/_jsx(\"textarea\",{className:\"BodyInput\",name:\"body\",placeholder:\"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",value:body,onChange:onChange})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"titleBody_layout\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"titleBody_name\",children:\"\\uC0AC\\uC9C4 \\uC5C5\\uB85C\\uB4DC\"})}),/*#__PURE__*/_jsx(\"input\",{className:\"imgUp\",type:\"file\",onChange:onFileChange})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn_layout\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"backBtn\",type:\"button\",onClick:backToList,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"input\",{className:\"CreateBtn\",type:\"submit\",value:\"\\uB4F1\\uB85D\\uD558\\uAE30\"})]})]})]})});}export default CreateJoy;","map":{"version":3,"names":["React","useState","useNavigate","useLocation","axios","CRUDHeader","jsx","_jsx","jsxs","_jsxs","CreateJoy","navigate","location","nextNo","state","board","setBoard","title","body","file","setFile","onChange","event","value","name","target","onFileChange","files","saveBoard","preventDefault","formData","FormData","append","Date","toISOString","response","post","withCredentials","headers","newPostId","data","no","alert","concat","newPost","error","console","backToList","className","children","onSubmit","type","placeholder","onClick"],"sources":["C:/camputhon_practice/project2-검색/front-end/src/components/community/CRUD/CreateJoy.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import './CRUD.css';\r\n// import axios from 'axios';\r\n// import CRUDHeader from './CRUDHeader';\r\n\r\n// function CreateJoy() {\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const { nextNo } = location.state || {};\r\n\r\n//   const [board, setBoard] = useState({\r\n//     title: '',\r\n//     body: '',\r\n//   });\r\n\r\n//   const { title, body } = board;\r\n\r\n//   const onChange = (event) => {\r\n//     const { value, name } = event.target;\r\n//     setBoard({\r\n//       ...board,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const saveBoard = async (event) => {\r\n//     event.preventDefault();\r\n//     const newPost = {\r\n//       no: nextNo,\r\n//       title,\r\n//       content: body,\r\n//       created_date: new Date().toISOString(),\r\n//       board_type: 'joy',\r\n//     };\r\n\r\n//     try {\r\n//       const response = await axios.post(`/joy/process/new_Post`, newPost, { withCredentials: true });\r\n//       const newPostId = response.data.no;\r\n//       console.log('왜안돼', { newPostId }, { newPost }, response.data);\r\n//       alert('등록되었습니다.');\r\n//       navigate(`/joy/PostView/${newPostId}`, { state: { newPost } });\r\n//     } catch (error) {\r\n//       console.error('Error saving post:', error);\r\n//       alert('글을 저장하는 도중 오류가 발생했습니다.');\r\n//     }\r\n//   };\r\n\r\n//   const backToList = () => {\r\n//     navigate('/joy');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"Create_all\">\r\n//       <div>\r\n//         <div className=\"header_layout\">\r\n//           <CRUDHeader title=\"기쁨이 글쓰기\" />\r\n//         </div>\r\n//         <form onSubmit={saveBoard}>\r\n//           <div className=\"titleBody_layout\">\r\n//             <div>\r\n//               <p>\r\n//                 <span className=\"titleBody_name\">제목</span>\r\n//               </p>\r\n//               <input\r\n//                 className=\"titleInput\"\r\n//                 type=\"text\"\r\n//                 name=\"title\"\r\n//                 placeholder=\"제목을 입력하세요\"\r\n//                 value={title}\r\n//                 onChange={onChange}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <br />\r\n//           <div className=\"titleBody_layout\">\r\n//             <div>\r\n//               <p>\r\n//                 <span className=\"titleBody_name\">내용</span>\r\n//               </p>\r\n//               <textarea\r\n//                 className=\"BodyInput\"\r\n//                 name=\"body\"\r\n//                 placeholder=\"내용을 입력하세요\"\r\n//                 value={body}\r\n//                 onChange={onChange}\r\n//               ></textarea>\r\n//             </div>\r\n//           </div>\r\n//           <br />\r\n//           <div className=\"btn_layout\">\r\n//             <button className=\"backBtn\" type=\"button\" onClick={backToList}>\r\n//               취소\r\n//             </button>\r\n//             <input className=\"CreateBtn\" type=\"submit\" value=\"등록하기\"></input>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CreateJoy;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './CRUD.css';\r\nimport axios from 'axios';\r\nimport CRUDHeader from './CRUDHeader';\r\n\r\nfunction CreateJoy() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { nextNo } = location.state || {};\r\n\r\n  const [board, setBoard] = useState({\r\n    title: '',\r\n    body: '',\r\n  });\r\n  const [file, setFile] = useState(null);\r\n\r\n  const { title, body } = board;\r\n\r\n  const onChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setBoard({\r\n      ...board,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const saveBoard = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('title', title);\r\n    formData.append('content', body);\r\n    formData.append('created_date', new Date().toISOString());\r\n    formData.append('board_type', 'joy');\r\n\r\n    try {\r\n      const response = await axios.post(`/joy/process/new_Post`, formData, {\r\n        withCredentials: true,\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      const newPostId = response.data.no;\r\n      alert('등록되었습니다.');\r\n      navigate(`/joy/PostView/${newPostId}`, { state: { newPost: response.data } });\r\n    } catch (error) {\r\n      console.error('Error saving post:', error);\r\n      alert('글을 저장하는 도중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const backToList = () => {\r\n    navigate('/joy');\r\n  };\r\n\r\n  return (\r\n    <div className=\"Create_all\">\r\n      <div>\r\n        <div className=\"header_layout\">\r\n          <CRUDHeader title=\"기쁨이 글쓰기\" />\r\n        </div>\r\n        <form onSubmit={saveBoard}>\r\n          <div className=\"titleBody_layout\">\r\n            <div>\r\n              <p>\r\n                <span className=\"titleBody_name\">제목</span>\r\n              </p>\r\n              <input\r\n                className=\"titleInput\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"제목을 입력하세요\"\r\n                value={title}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className=\"titleBody_layout\">\r\n            <div>\r\n              <p>\r\n                <span className=\"titleBody_name\">내용</span>\r\n              </p>\r\n              <textarea\r\n                className=\"BodyInput\"\r\n                name=\"body\"\r\n                placeholder=\"내용을 입력하세요\"\r\n                value={body}\r\n                onChange={onChange}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className=\"titleBody_layout\">\r\n            <div>\r\n              <p>\r\n                <span className=\"titleBody_name\">사진 업로드</span>\r\n              </p>\r\n              <input className=\"imgUp\" type=\"file\" onChange={onFileChange} />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className=\"btn_layout\">\r\n            <button className=\"backBtn\" type=\"button\" onClick={backToList}>\r\n              취소\r\n            </button>\r\n            <input className=\"CreateBtn\" type=\"submit\" value=\"등록하기\"></input>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateJoy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}