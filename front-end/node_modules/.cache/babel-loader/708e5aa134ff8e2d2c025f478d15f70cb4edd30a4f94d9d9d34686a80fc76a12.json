{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Link, useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import CRUDHeader from './CRUDHeader';\n// import CreateComment from '../comments/CreateComment';\n// import community from '../../images/community.png';\n// import './CRUD.css';\n// function ReadJoy() {\n//   const { no } = useParams();\n//   const navigate = useNavigate();\n//   const [post, setPost] = useState(null);\n//   const [comments, setComments] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   useEffect(() => {\n//     // 백엔드에서 게시글과 댓글 목록을 가져옴\n//     const fetchPostAndComments = async () => {\n//       try {\n//         const postResponse = await axios.get(`/joy/PostView/${no}`);\n//         setPost(postResponse.data.post);\n//         const commentsResponse = await axios.get(`/joy/comments/${no}`);\n//         setComments(commentsResponse.data);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('게시글을 불러오는 중 오류 발생:', error);\n//         setError('게시글을 불러오는 중 오류 발생');\n//         setLoading(false);\n//       }\n//     };\n//     fetchPostAndComments();\n//   }, [no]);\n//   const handleDelete = async () => {\n//     const confirmDelete = window.confirm('정말로 삭제하시겠습니까?');\n//     if (confirmDelete) {\n//       try {\n//         await axios.delete(`/joy/Postview/${no}/process/delete`);\n//         alert('게시글이 삭제되었습니다.');\n//         navigate('/joy');\n//       } catch (error) {\n//         if (error.response && error.response.status === 403) {\n//           alert('삭제 권한이 없습니다.');\n//         } else {\n//           console.error('게시글 삭제 중 오류 발생:', error);\n//           alert('게시글 삭제 중 오류가 발생했습니다.');\n//         }\n//       }\n//     }\n//   };\n//   const handleCommentSubmit = async () => {\n//     // 댓글 등록 후 댓글 목록 다시 불러오기\n//     try {\n//       const commentsResponse = await axios.get(`/joy/comments/${no}`);\n//       setComments(commentsResponse.data);\n//     } catch (error) {\n//       console.error('댓글 목록을 다시 불러오는 중 오류 발생:', error);\n//     }\n//   };\n//   if (loading) {\n//     return <div>로딩 중...</div>;\n//   }\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n//   if (!post) {\n//     return <div>게시글을 찾을 수 없습니다.</div>;\n//   }\n//   const { title, nickname, created_date, content } = post;\n//   return (\n//     <div className=\"Read_all\">\n//       <div>\n//         <div className=\"header_layout\">\n//           <CRUDHeader title=\"기쁨이 게시판\" />\n//         </div>\n//         <div className=\"ReadTitle\">{title}</div>\n//         <div className=\"infoUpdateDelete\">\n//           <div className=\"info\">\n//             <div>프사</div>\n//             <div>{nickname}</div>\n//             <div>{created_date}</div>\n//           </div>\n//           <div className=\"updateDelete\">\n//             <Link to={`/joy/Postview/${no}/process/update`}>수정</Link>\n//             <div onClick={handleDelete} style={{ cursor: 'pointer' }}>\n//               삭제\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"explainText\">\n//           <p>HOPINFO는 서로의 아픔을 공감하고 위로하는 커뮤니티입니다.</p>\n//           <p>회원들끼리 서로 존중하고, 응원과 조언을 아끼지 않는 자랑스러운 회원이 되도록 합시다.</p>\n//         </div>\n//         <div className=\"ReadContent\">{content}</div>\n//         <div className=\"commontLogo\">\n//           <img src={community} alt=\"커뮤니티 로고\" width={27} height={26} />\n//           <div>댓글</div>\n//         </div>\n//         <div>\n//           {comments.length > 0 ? (\n//             comments.map((comment) => (\n//               <div className=\"comment_all\" key={comment.comment_no}>\n//                 <div>\n//                   <div>프사</div>\n//                 </div>\n//                 <div>\n//                   <div className=\"commentNickname\">{comment.nickname}</div>\n//                   <div>{comment.content}</div>\n//                   <div className=\"commentDate\">{comment.created_date}</div>\n//                 </div>\n//               </div>\n//             ))\n//           ) : (\n//             <div>댓글이 없습니다.</div>\n//           )}\n//         </div>\n//         <div>\n//           <div>내 닉네임</div>\n//           <CreateComment postId={no} onCommentSubmit={handleCommentSubmit} />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default ReadJoy;\nimport React,{useState,useEffect}from'react';import{Link,useParams,useNavigate}from'react-router-dom';import axios from'axios';import CRUDHeader from'./CRUDHeader';import CreateComment from'../comments/CreateComment';import community from'../../images/community.png';import'./CRUD.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ReadJoy(){const{no}=useParams();const navigate=useNavigate();const[post,setPost]=useState(null);const[comments,setComments]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[imageSrc,setImageSrc]=useState('');useEffect(()=>{// 백엔드에서 게시글과 댓글 목록을 가져옴\nconst fetchPostAndComments=async()=>{try{const postResponse=await axios.get(\"/joy/PostView/\".concat(no));setPost(postResponse.data.post);const commentsResponse=await axios.get(\"/joy/comments/\".concat(no));setComments(commentsResponse.data);// 이미지 로드\nif(postResponse.data.post.file_data){const imageResponse=await axios.get(\"/community/image/\".concat(no),{responseType:'arraybuffer'});const base64=btoa(new Uint8Array(imageResponse.data).reduce((data,byte)=>data+String.fromCharCode(byte),''));setImageSrc(\"data:image/jpeg;base64,\".concat(base64));}setLoading(false);}catch(error){console.error('게시글을 불러오는 중 오류 발생:',error);setError('게시글을 불러오는 중 오류 발생');setLoading(false);}};fetchPostAndComments();},[no]);const handleDelete=async()=>{const confirmDelete=window.confirm('정말로 삭제하시겠습니까?');if(confirmDelete){try{await axios.delete(\"/joy/Postview/\".concat(no,\"/process/delete\"));alert('게시글이 삭제되었습니다.');navigate('/joy');}catch(error){if(error.response&&error.response.status===403){alert('삭제 권한이 없습니다.');}else{console.error('게시글 삭제 중 오류 발생:',error);alert('게시글 삭제 중 오류가 발생했습니다.');}}}};const handleCommentSubmit=async()=>{// 댓글 등록 후 댓글 목록 다시 불러오기\ntry{const commentsResponse=await axios.get(\"/joy/comments/\".concat(no));setComments(commentsResponse.data);}catch(error){console.error('댓글 목록을 다시 불러오는 중 오류 발생:',error);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"\\uB85C\\uB529 \\uC911...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{children:error});}if(!post){return/*#__PURE__*/_jsx(\"div\",{children:\"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"});}const{title,nickname,created_date,content}=post;return/*#__PURE__*/_jsx(\"div\",{className:\"Read_all\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"header_layout\",children:/*#__PURE__*/_jsx(CRUDHeader,{title:\"\\uAE30\\uC068\\uC774 \\uAC8C\\uC2DC\\uD310\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ReadTitle\",children:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"infoUpdateDelete\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\uD504\\uC0AC\"}),/*#__PURE__*/_jsx(\"div\",{children:nickname}),/*#__PURE__*/_jsx(\"div\",{children:created_date})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"updateDelete\",children:[/*#__PURE__*/_jsx(Link,{to:\"/joy/Postview/\".concat(no,\"/process/update\"),children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"div\",{onClick:handleDelete,style:{cursor:'pointer'},children:\"\\uC0AD\\uC81C\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"explainText\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"HOPINFO\\uB294 \\uC11C\\uB85C\\uC758 \\uC544\\uD514\\uC744 \\uACF5\\uAC10\\uD558\\uACE0 \\uC704\\uB85C\\uD558\\uB294 \\uCEE4\\uBBA4\\uB2C8\\uD2F0\\uC785\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD68C\\uC6D0\\uB4E4\\uB07C\\uB9AC \\uC11C\\uB85C \\uC874\\uC911\\uD558\\uACE0, \\uC751\\uC6D0\\uACFC \\uC870\\uC5B8\\uC744 \\uC544\\uB07C\\uC9C0 \\uC54A\\uB294 \\uC790\\uB791\\uC2A4\\uB7EC\\uC6B4 \\uD68C\\uC6D0\\uC774 \\uB418\\uB3C4\\uB85D \\uD569\\uC2DC\\uB2E4.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ReadContent\",children:[/*#__PURE__*/_jsx(\"p\",{children:content}),imageSrc&&/*#__PURE__*/_jsx(\"img\",{src:imageSrc,alt:\"Post\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"commontLogo\",children:[/*#__PURE__*/_jsx(\"img\",{src:community,alt:\"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uB85C\\uACE0\",width:27,height:26}),/*#__PURE__*/_jsx(\"div\",{children:\"\\uB313\\uAE00\"})]}),/*#__PURE__*/_jsx(\"div\",{children:comments.length>0?comments.map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment_all\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:\"\\uD504\\uC0AC\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"commentNickname\",children:comment.nickname}),/*#__PURE__*/_jsx(\"div\",{children:comment.content}),/*#__PURE__*/_jsx(\"div\",{className:\"commentDate\",children:comment.created_date})]})]},comment.comment_no)):/*#__PURE__*/_jsx(\"div\",{children:\"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\uB0B4 \\uB2C9\\uB124\\uC784\"}),/*#__PURE__*/_jsx(CreateComment,{postId:no,onCommentSubmit:handleCommentSubmit})]})]})});}export default ReadJoy;","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","axios","CRUDHeader","CreateComment","community","jsx","_jsx","jsxs","_jsxs","ReadJoy","no","navigate","post","setPost","comments","setComments","loading","setLoading","error","setError","imageSrc","setImageSrc","fetchPostAndComments","postResponse","get","concat","data","commentsResponse","file_data","imageResponse","responseType","base64","btoa","Uint8Array","reduce","byte","String","fromCharCode","console","handleDelete","confirmDelete","window","confirm","delete","alert","response","status","handleCommentSubmit","children","title","nickname","created_date","content","className","to","onClick","style","cursor","src","alt","width","height","length","map","comment","comment_no","postId","onCommentSubmit"],"sources":["C:/camputhon_practice/project2-검색/front-end/src/components/community/CRUD/ReadJoy.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link, useParams, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import CRUDHeader from './CRUDHeader';\r\n// import CreateComment from '../comments/CreateComment';\r\n// import community from '../../images/community.png';\r\n// import './CRUD.css';\r\n\r\n// function ReadJoy() {\r\n//   const { no } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [post, setPost] = useState(null);\r\n//   const [comments, setComments] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // 백엔드에서 게시글과 댓글 목록을 가져옴\r\n//     const fetchPostAndComments = async () => {\r\n//       try {\r\n//         const postResponse = await axios.get(`/joy/PostView/${no}`);\r\n//         setPost(postResponse.data.post);\r\n\r\n//         const commentsResponse = await axios.get(`/joy/comments/${no}`);\r\n//         setComments(commentsResponse.data);\r\n\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         console.error('게시글을 불러오는 중 오류 발생:', error);\r\n//         setError('게시글을 불러오는 중 오류 발생');\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchPostAndComments();\r\n//   }, [no]);\r\n\r\n//   const handleDelete = async () => {\r\n//     const confirmDelete = window.confirm('정말로 삭제하시겠습니까?');\r\n\r\n//     if (confirmDelete) {\r\n//       try {\r\n//         await axios.delete(`/joy/Postview/${no}/process/delete`);\r\n//         alert('게시글이 삭제되었습니다.');\r\n//         navigate('/joy');\r\n//       } catch (error) {\r\n//         if (error.response && error.response.status === 403) {\r\n//           alert('삭제 권한이 없습니다.');\r\n//         } else {\r\n//           console.error('게시글 삭제 중 오류 발생:', error);\r\n//           alert('게시글 삭제 중 오류가 발생했습니다.');\r\n//         }\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleCommentSubmit = async () => {\r\n//     // 댓글 등록 후 댓글 목록 다시 불러오기\r\n//     try {\r\n//       const commentsResponse = await axios.get(`/joy/comments/${no}`);\r\n//       setComments(commentsResponse.data);\r\n//     } catch (error) {\r\n//       console.error('댓글 목록을 다시 불러오는 중 오류 발생:', error);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>로딩 중...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n\r\n//   if (!post) {\r\n//     return <div>게시글을 찾을 수 없습니다.</div>;\r\n//   }\r\n\r\n//   const { title, nickname, created_date, content } = post;\r\n\r\n//   return (\r\n//     <div className=\"Read_all\">\r\n//       <div>\r\n//         <div className=\"header_layout\">\r\n//           <CRUDHeader title=\"기쁨이 게시판\" />\r\n//         </div>\r\n//         <div className=\"ReadTitle\">{title}</div>\r\n//         <div className=\"infoUpdateDelete\">\r\n//           <div className=\"info\">\r\n//             <div>프사</div>\r\n//             <div>{nickname}</div>\r\n//             <div>{created_date}</div>\r\n//           </div>\r\n//           <div className=\"updateDelete\">\r\n//             <Link to={`/joy/Postview/${no}/process/update`}>수정</Link>\r\n//             <div onClick={handleDelete} style={{ cursor: 'pointer' }}>\r\n//               삭제\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"explainText\">\r\n//           <p>HOPINFO는 서로의 아픔을 공감하고 위로하는 커뮤니티입니다.</p>\r\n//           <p>회원들끼리 서로 존중하고, 응원과 조언을 아끼지 않는 자랑스러운 회원이 되도록 합시다.</p>\r\n//         </div>\r\n//         <div className=\"ReadContent\">{content}</div>\r\n//         <div className=\"commontLogo\">\r\n//           <img src={community} alt=\"커뮤니티 로고\" width={27} height={26} />\r\n//           <div>댓글</div>\r\n//         </div>\r\n//         <div>\r\n//           {comments.length > 0 ? (\r\n//             comments.map((comment) => (\r\n//               <div className=\"comment_all\" key={comment.comment_no}>\r\n//                 <div>\r\n//                   <div>프사</div>\r\n//                 </div>\r\n//                 <div>\r\n//                   <div className=\"commentNickname\">{comment.nickname}</div>\r\n//                   <div>{comment.content}</div>\r\n//                   <div className=\"commentDate\">{comment.created_date}</div>\r\n//                 </div>\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <div>댓글이 없습니다.</div>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <div>내 닉네임</div>\r\n//           <CreateComment postId={no} onCommentSubmit={handleCommentSubmit} />\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ReadJoy;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CRUDHeader from './CRUDHeader';\r\nimport CreateComment from '../comments/CreateComment';\r\nimport community from '../../images/community.png';\r\nimport './CRUD.css';\r\n\r\nfunction ReadJoy() {\r\n  const { no } = useParams();\r\n  const navigate = useNavigate();\r\n  const [post, setPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [imageSrc, setImageSrc] = useState('');\r\n\r\n  useEffect(() => {\r\n    // 백엔드에서 게시글과 댓글 목록을 가져옴\r\n    const fetchPostAndComments = async () => {\r\n      try {\r\n        const postResponse = await axios.get(`/joy/PostView/${no}`);\r\n        setPost(postResponse.data.post);\r\n\r\n        const commentsResponse = await axios.get(`/joy/comments/${no}`);\r\n        setComments(commentsResponse.data);\r\n\r\n        // 이미지 로드\r\n        if (postResponse.data.post.file_data) {\r\n          const imageResponse = await axios.get(`/community/image/${no}`, {\r\n            responseType: 'arraybuffer',\r\n          });\r\n          const base64 = btoa(\r\n            new Uint8Array(imageResponse.data).reduce(\r\n              (data, byte) => data + String.fromCharCode(byte),\r\n              '',\r\n            ),\r\n          );\r\n          setImageSrc(`data:image/jpeg;base64,${base64}`);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('게시글을 불러오는 중 오류 발생:', error);\r\n        setError('게시글을 불러오는 중 오류 발생');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPostAndComments();\r\n  }, [no]);\r\n\r\n  const handleDelete = async () => {\r\n    const confirmDelete = window.confirm('정말로 삭제하시겠습니까?');\r\n\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`/joy/Postview/${no}/process/delete`);\r\n        alert('게시글이 삭제되었습니다.');\r\n        navigate('/joy');\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 403) {\r\n          alert('삭제 권한이 없습니다.');\r\n        } else {\r\n          console.error('게시글 삭제 중 오류 발생:', error);\r\n          alert('게시글 삭제 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async () => {\r\n    // 댓글 등록 후 댓글 목록 다시 불러오기\r\n    try {\r\n      const commentsResponse = await axios.get(`/joy/comments/${no}`);\r\n      setComments(commentsResponse.data);\r\n    } catch (error) {\r\n      console.error('댓글 목록을 다시 불러오는 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!post) {\r\n    return <div>게시글을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n  const { title, nickname, created_date, content } = post;\r\n\r\n  return (\r\n    <div className=\"Read_all\">\r\n      <div>\r\n        <div className=\"header_layout\">\r\n          <CRUDHeader title=\"기쁨이 게시판\" />\r\n        </div>\r\n        <div className=\"ReadTitle\">{title}</div>\r\n        <div className=\"infoUpdateDelete\">\r\n          <div className=\"info\">\r\n            <div>프사</div>\r\n            <div>{nickname}</div>\r\n            <div>{created_date}</div>\r\n          </div>\r\n          <div className=\"updateDelete\">\r\n            <Link to={`/joy/Postview/${no}/process/update`}>수정</Link>\r\n            <div onClick={handleDelete} style={{ cursor: 'pointer' }}>\r\n              삭제\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"explainText\">\r\n          <p>HOPINFO는 서로의 아픔을 공감하고 위로하는 커뮤니티입니다.</p>\r\n          <p>회원들끼리 서로 존중하고, 응원과 조언을 아끼지 않는 자랑스러운 회원이 되도록 합시다.</p>\r\n        </div>\r\n        <div className=\"ReadContent\">\r\n          <p>{content}</p>\r\n          {imageSrc && <img src={imageSrc} alt=\"Post\" />}\r\n        </div>\r\n        <div className=\"commontLogo\">\r\n          <img src={community} alt=\"커뮤니티 로고\" width={27} height={26} />\r\n          <div>댓글</div>\r\n        </div>\r\n        <div>\r\n          {comments.length > 0 ? (\r\n            comments.map((comment) => (\r\n              <div className=\"comment_all\" key={comment.comment_no}>\r\n                <div>\r\n                  <div>프사</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"commentNickname\">{comment.nickname}</div>\r\n                  <div>{comment.content}</div>\r\n                  <div className=\"commentDate\">{comment.created_date}</div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>댓글이 없습니다.</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div>내 닉네임</div>\r\n          <CreateComment postId={no} onCommentSubmit={handleCommentSubmit} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadJoy;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CAC/D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,aAAa,KAAM,2BAA2B,CACrD,MAAO,CAAAC,SAAS,KAAM,4BAA4B,CAClD,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,KAAM,CAAEC,EAAG,CAAC,CAAGX,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAAY,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACkB,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACoB,OAAO,CAAEC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}