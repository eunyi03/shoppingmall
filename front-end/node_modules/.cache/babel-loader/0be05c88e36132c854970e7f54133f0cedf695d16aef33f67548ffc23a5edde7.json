{"ast":null,"code":"import React from\"react\";import{Link,useLocation,useNavigate}from\"react-router-dom\";import\"./Navbar.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Navbar(){const location=useLocation();const navigate=useNavigate();const checkLogin=async(e,targetPath)=>{e.preventDefault();// 링크 기본 동작을 막음\nconsole.log(\"checkLogin 호출됨\");try{const response=await fetch(\"/process/check-login\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\"},credentials:\"include\"// 쿠키를 포함하여 요청\n});const result=await response.json();console.log(\"응답 받음:\",result);// 디버깅용 로그\nif(result.loggedIn){navigate(targetPath);// 로그인 상태라면 원래 가려던 경로로 이동\n}else{navigate(\"/LoginTap\",{state:{from:targetPath}});// 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\n}}catch(error){console.error(\"세션 확인 중 오류 발생:\",error);navigate(\"/LoginTap\",{state:{from:targetPath}});// 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"navbar_all\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"OutsideIn\",children:/*#__PURE__*/_jsx(Link,{className:\"navbarMenu_logo\",to:\"/\",children:/*#__PURE__*/_jsxs(\"div\",{children:[\"HOPINFO\",/*#__PURE__*/_jsx(\"i\",{className:\"icon-users\"})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(Link,{className:\"navbarMenu \".concat(location.pathname===\"/\"?\"underline\":\"\"),to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{className:\"navbarMenu \".concat(location.pathname===\"/information\"?\"underline\":\"\"),href:\"/information\",onClick:e=>checkLogin(e,\"/information\"),children:\"Information\"}),/*#__PURE__*/_jsx(Link,{className:\"navbarMenu \".concat(location.pathname===\"/hospital\"?\"underline\":\"\"),href:\"/hospital\",onClick:e=>checkLogin(e,\"/hospital\"),children:\"Hospital\"}),/*#__PURE__*/_jsx(Link,{className:\"navbarMenu \".concat(location.pathname===\"/community/joy\"?\"underline\":\"\"),href:\"/community/joy\",onClick:e=>checkLogin(e,\"/community/joy\"),children:\"Community\"}),/*#__PURE__*/_jsx(\"a\",{className:\"navbarMenu \".concat(location.pathname===\"/mypage\"?\"underline\":\"\"),href:\"/mypage\",onClick:e=>checkLogin(e,\"/mypage\"),children:\"MyPage\"})]})]});}export default Navbar;","map":{"version":3,"names":["React","Link","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","Navbar","location","navigate","checkLogin","e","targetPath","preventDefault","console","log","response","fetch","method","headers","credentials","result","json","loggedIn","state","from","error","className","children","to","concat","pathname","href","onClick"],"sources":["C:/Users/atwod/OneDrive/바탕 화면/동국대 폴더/백엔드 공부/실전 2차/HackathonProject2_OutsideIn_UPGRADED/front-end/src/components/Navbar.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const checkLogin = async (e, targetPath) => {\r\n    e.preventDefault(); // 링크 기본 동작을 막음\r\n    console.log(\"checkLogin 호출됨\");\r\n    try {\r\n      const response = await fetch(\"/process/check-login\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\", // 쿠키를 포함하여 요청\r\n      });\r\n      const result = await response.json();\r\n      console.log(\"응답 받음:\", result); // 디버깅용 로그\r\n      if (result.loggedIn) {\r\n        navigate(targetPath); // 로그인 상태라면 원래 가려던 경로로 이동\r\n      } else {\r\n        navigate(\"/LoginTap\", { state: { from: targetPath } }); // 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\r\n      }\r\n    } catch (error) {\r\n      console.error(\"세션 확인 중 오류 발생:\", error);\r\n      navigate(\"/LoginTap\", { state: { from: targetPath } }); // 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar_all\">\r\n      <div className=\"OutsideIn\">\r\n        <Link className=\"navbarMenu_logo\" to=\"/\">\r\n          <div>\r\n            HOPINFO\r\n            <i className=\"icon-users\" />\r\n          </div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navbar\">\r\n        <Link\r\n          className={`navbarMenu ${\r\n            location.pathname === \"/\" ? \"underline\" : \"\"\r\n          }`}\r\n          to=\"/\"\r\n        >\r\n          Home\r\n        </Link>\r\n        <Link\r\n          className={`navbarMenu ${\r\n            location.pathname === \"/information\" ? \"underline\" : \"\"\r\n          }`}\r\n          href=\"/information\"\r\n          onClick={(e) => checkLogin(e, \"/information\")}\r\n        >\r\n          Information\r\n        </Link>\r\n        <Link\r\n          className={`navbarMenu ${\r\n            location.pathname === \"/hospital\" ? \"underline\" : \"\"\r\n          }`}\r\n          href=\"/hospital\"\r\n          onClick={(e) => checkLogin(e, \"/hospital\")}\r\n        >\r\n          Hospital\r\n        </Link>\r\n        <Link\r\n          className={`navbarMenu ${\r\n            location.pathname === \"/community/joy\" ? \"underline\" : \"\"\r\n          }`}\r\n          href=\"/community/joy\"\r\n          onClick={(e) => checkLogin(e, \"/community/joy\")}\r\n        >\r\n          Community\r\n        </Link>\r\n        <a\r\n          className={`navbarMenu ${\r\n            location.pathname === \"/mypage\" ? \"underline\" : \"\"\r\n          }`}\r\n          href=\"/mypage\"\r\n          onClick={(e) => checkLogin(e, \"/mypage\")}\r\n        >\r\n          MyPage\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}