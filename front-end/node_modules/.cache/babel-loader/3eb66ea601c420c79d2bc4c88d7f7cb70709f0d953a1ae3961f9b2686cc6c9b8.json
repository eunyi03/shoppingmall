{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport sadnessImg from \"./images/sadness.png\";\nimport anxietyImg from \"./images/anxiety.png\";\nimport fearImg from \"./images/fear.png\";\nimport mypageUser from \"./images/mypageuser.png\";\nconst useUserData = (initialData = {}) => {\n  _s();\n  const [firstName, setFirstName] = useState(initialData.firstName || \"\");\n  const [lastName, setLastName] = useState(initialData.lastName || \"\");\n  const [usernickname, setUsernickname] = useState(initialData.usernickname || \"\");\n  const [birth, setBirth] = useState(initialData.birth || \"\");\n  const [gender, setGender] = useState(initialData.gender || \"\");\n  const [userId, setUserId] = useState(initialData.userId || \"\");\n  const [password, setPassword] = useState(initialData.password || \"\");\n  const [state, setState] = useState(initialData.state || \"\");\n  const [roomid, setroomid] = useState(initialData.roomid || \"\");\n  const [profileImage, setProfileImage] = useState(mypageUser); // 프로필 이미지 초기값 : mypageUser로 설정해둠\n\n  const fetchUserData = async () => {\n    try {\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\n      const response = await axios.post(\"/mypage\");\n      const userData = response.data;\n      setFirstName(userData.Lastname || \"\");\n      setLastName(userData.Firstname || \"\");\n      setUsernickname(userData.nickname || \"\");\n      setBirth(userData.birth || \"\");\n      setGender(userData.gender || \"\");\n      setUserId(userData.id || \"\"); // 아이디 값 변경 불가\n      setPassword(userData.password || \"\");\n      setState(userData.state || \"\");\n      setroomid(userData.roomid || \"\");\n      setProfileImage(getProfileImage(userData.state));\n    } catch (error) {\n      console.error(\"사용자 데이터를 가져오는 중 오류 발생:\", error);\n    }\n    try {\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\n      const response = await axios.post(\"/process/hospital\");\n      const userData = response.data;\n      setUsernickname(userData.nickname || \"\");\n      setUserId(userData.id || \"\"); // 아이디 값 변경 불가\n    } catch (error) {\n      console.error(\"/hospital에서 사용자 데이터를 가져오는 중 오류 발생:\", error);\n    }\n  };\n  const getProfileImage = state => {\n    switch (state) {\n      case \"우울\":\n        return sadnessImg;\n      case \"불안\":\n        return anxietyImg;\n      case \"강박\":\n        return fearImg;\n      default:\n        return mypageUser;\n    }\n  };\n\n  // 초기 유저정보 가져옴\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const handleSave = async () => {\n    try {\n      const updateData = {\n        lastName,\n        firstName,\n        gender,\n        birth,\n        nickname: usernickname,\n        id: userId,\n        password,\n        roomid,\n        state\n      };\n\n      // 정보 수정 시 데이터 전달 경로\n      console.log(\"Sending update data:\", updateData);\n      const response = await axios.post(\"/mypage/process/update\", updateData);\n      if (response.status === 200) {\n        alert(\"변경사항이 저장되었습니다.\");\n      } else {\n        fetchUserData(); // 변경사항 저장 후 유저정보를 다시 불러옴\n        throw new Error(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"변경사항을 저장하는 데 오류가 발생했습니다:\", error);\n      alert(\"변경사항을 저장하는 데 오류가 발생했습니다.\");\n    }\n  };\n  return {\n    firstName,\n    lastName,\n    usernickname,\n    birth,\n    gender,\n    userId,\n    password,\n    roomid,\n    state,\n    profileImage,\n    setFirstName,\n    setLastName,\n    setUsernickname,\n    setBirth,\n    setGender,\n    setUserId,\n    setPassword,\n    setroomid,\n    setState,\n    setProfileImage,\n    handleSave,\n    fetchUserData\n  };\n};\n_s(useUserData, \"mG1tJ7ojog1/3JdN+PrQbwoVs88=\");\nexport default useUserData;","map":{"version":3,"names":["useState","useEffect","axios","sadnessImg","anxietyImg","fearImg","mypageUser","useUserData","initialData","_s","firstName","setFirstName","lastName","setLastName","usernickname","setUsernickname","birth","setBirth","gender","setGender","userId","setUserId","password","setPassword","state","setState","roomid","setroomid","profileImage","setProfileImage","fetchUserData","response","post","userData","data","Lastname","Firstname","nickname","id","getProfileImage","error","console","handleSave","updateData","log","status","alert","Error","message"],"sources":["/Users/eunyi/Documents/3-2/DB/shop/front-end/src/components/useUserData.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport sadnessImg from \"./images/sadness.png\";\nimport anxietyImg from \"./images/anxiety.png\";\nimport fearImg from \"./images/fear.png\";\nimport mypageUser from \"./images/mypageuser.png\";\n\nconst useUserData = (initialData = {}) => {\n  const [firstName, setFirstName] = useState(initialData.firstName || \"\");\n  const [lastName, setLastName] = useState(initialData.lastName || \"\");\n  const [usernickname, setUsernickname] = useState(\n    initialData.usernickname || \"\"\n  );\n  const [birth, setBirth] = useState(initialData.birth || \"\");\n  const [gender, setGender] = useState(initialData.gender || \"\");\n  const [userId, setUserId] = useState(initialData.userId || \"\");\n  const [password, setPassword] = useState(initialData.password || \"\");\n  const [state, setState] = useState(initialData.state || \"\");\n  const [roomid, setroomid] = useState(initialData.roomid || \"\");\n  const [profileImage, setProfileImage] = useState(mypageUser); // 프로필 이미지 초기값 : mypageUser로 설정해둠\n\n  const fetchUserData = async () => {\n    try {\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\n      const response = await axios.post(\"/mypage\");\n      const userData = response.data;\n\n      setFirstName(userData.Lastname || \"\");\n      setLastName(userData.Firstname || \"\");\n      setUsernickname(userData.nickname || \"\");\n      setBirth(userData.birth || \"\");\n      setGender(userData.gender || \"\");\n      setUserId(userData.id || \"\"); // 아이디 값 변경 불가\n      setPassword(userData.password || \"\");\n      setState(userData.state || \"\");\n      setroomid(userData.roomid || \"\");\n      setProfileImage(getProfileImage(userData.state));\n    } catch (error) {\n      console.error(\"사용자 데이터를 가져오는 중 오류 발생:\", error);\n    }\n    try {\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\n      const response = await axios.post(\"/process/hospital\");\n      const userData = response.data;\n      setUsernickname(userData.nickname || \"\");\n      setUserId(userData.id || \"\"); // 아이디 값 변경 불가\n    } catch (error) {\n      console.error(\n        \"/hospital에서 사용자 데이터를 가져오는 중 오류 발생:\",\n        error\n      );\n    }\n  };\n\n  const getProfileImage = (state) => {\n    switch (state) {\n      case \"우울\":\n        return sadnessImg;\n      case \"불안\":\n        return anxietyImg;\n      case \"강박\":\n        return fearImg;\n      default:\n        return mypageUser;\n    }\n  };\n\n  // 초기 유저정보 가져옴\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  const handleSave = async () => {\n    try {\n      const updateData = {\n        lastName,\n        firstName,\n        gender,\n        birth,\n        nickname: usernickname,\n        id: userId,\n        password,\n        roomid,\n        state,\n      };\n\n      // 정보 수정 시 데이터 전달 경로\n      console.log(\"Sending update data:\", updateData);\n      const response = await axios.post(\"/mypage/process/update\", updateData);\n\n      if (response.status === 200) {\n        alert(\"변경사항이 저장되었습니다.\");\n      } else {\n        fetchUserData(); // 변경사항 저장 후 유저정보를 다시 불러옴\n        throw new Error(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"변경사항을 저장하는 데 오류가 발생했습니다:\", error);\n      alert(\"변경사항을 저장하는 데 오류가 발생했습니다.\");\n    }\n  };\n\n  return {\n    firstName,\n    lastName,\n    usernickname,\n    birth,\n    gender,\n    userId,\n    password,\n    roomid,\n    state,\n    profileImage,\n    setFirstName,\n    setLastName,\n    setUsernickname,\n    setBirth,\n    setGender,\n    setUserId,\n    setPassword,\n    setroomid,\n    setState,\n    setProfileImage,\n    handleSave,\n    fetchUserData,\n  };\n};\n\nexport default useUserData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}