{"ast":null,"code":"import{useState,useEffect}from'react';import axios from'axios';const useUserData=function(){let initialData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const[firstName,setFirstName]=useState(initialData.firstName||'');const[lastName,setLastName]=useState(initialData.lastName||'');const[usernickname,setUsernickname]=useState(initialData.usernickname||'');const[birth,setBirth]=useState(initialData.birth||'');const[gender,setGender]=useState(initialData.gender||'');const[userId,setUserId]=useState(initialData.userId||'');const[password,setPassword]=useState(initialData.password||'');const[state,setState]=useState(initialData.state||'');const fetchUserData=async()=>{try{// 사용자가 로그인한 후 호출 (유저정보 가져오기)\nconst response=await axios.get('/loginpage/process/login');const userData=response.data;setFirstName(userData.Lastname||'');setLastName(userData.Firstname||'');setUsernickname(userData.nickname||'');setBirth(userData.birth||'');setGender(userData.gender||'');setUserId(userData.id||'');// 아이디 값 변경 불가\nsetPassword(userData.password||'');setState(userData.state||'');}catch(error){console.error('사용자 데이터를 가져오는 중 오류 발생:',error);}};useEffect(()=>{if(!initialData){fetchUserData();}},[]);const handleSave=async()=>{try{const updateData={lastName,firstName,gender,birth,usernickname,id:userId,password,state};// 정보 수정 시 데이터 전달 경로\nconst response=await axios.post('/mypage/process/update',updateData);if(response.status===200){alert('변경사항이 저장되었습니다.');}else{throw new Error(response.data.message);}}catch(error){console.error('변경사항을 저장하는 데 오류가 발생했습니다:',error);alert('변경사항을 저장하는 데 오류가 발생했습니다.');}};return{firstName,lastName,usernickname,birth,gender,userId,password,state,setFirstName,setLastName,setUsernickname,setBirth,setGender,setUserId,setPassword,setState,handleSave};};export default useUserData;","map":{"version":3,"names":["useState","useEffect","axios","useUserData","initialData","arguments","length","undefined","firstName","setFirstName","lastName","setLastName","usernickname","setUsernickname","birth","setBirth","gender","setGender","userId","setUserId","password","setPassword","state","setState","fetchUserData","response","get","userData","data","Lastname","Firstname","nickname","id","error","console","handleSave","updateData","post","status","alert","Error","message"],"sources":["C:/Users/atwod/OneDrive/바탕 화면/동국대 폴더/백엔드 공부/실전 2차/HackathonProject2_OutsideIn_UPGRADED/front-end/src/components/useUserData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useUserData = (initialData = {}) => {\r\n  const [firstName, setFirstName] = useState(initialData.firstName || '');\r\n  const [lastName, setLastName] = useState(initialData.lastName || '');\r\n  const [usernickname, setUsernickname] = useState(initialData.usernickname || '');\r\n  const [birth, setBirth] = useState(initialData.birth || '');\r\n  const [gender, setGender] = useState(initialData.gender || '');\r\n  const [userId, setUserId] = useState(initialData.userId || '');\r\n  const [password, setPassword] = useState(initialData.password || '');\r\n  const [state, setState] = useState(initialData.state || '');\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\r\n      const response = await axios.get('/loginpage/process/login');\r\n      const userData = response.data;\r\n\r\n      setFirstName(userData.Lastname || '');\r\n      setLastName(userData.Firstname || '');\r\n      setUsernickname(userData.nickname || '');\r\n      setBirth(userData.birth || '');\r\n      setGender(userData.gender || '');\r\n      setUserId(userData.id || ''); // 아이디 값 변경 불가\r\n      setPassword(userData.password || '');\r\n      setState(userData.state || '');\r\n    } catch (error) {\r\n      console.error('사용자 데이터를 가져오는 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!initialData) {\r\n      fetchUserData();\r\n    }\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const updateData = {\r\n        lastName,\r\n        firstName,\r\n        gender,\r\n        birth,\r\n        usernickname,\r\n        id: userId,\r\n        password,\r\n        state,\r\n      };\r\n\r\n      // 정보 수정 시 데이터 전달 경로\r\n      const response = await axios.post('/mypage/process/update', updateData);\r\n\r\n      if (response.status === 200) {\r\n        alert('변경사항이 저장되었습니다.');\r\n      } else {\r\n        throw new Error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('변경사항을 저장하는 데 오류가 발생했습니다:', error);\r\n      alert('변경사항을 저장하는 데 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return {\r\n    firstName,\r\n    lastName,\r\n    usernickname,\r\n    birth,\r\n    gender,\r\n    userId,\r\n    password,\r\n    state,\r\n    setFirstName,\r\n    setLastName,\r\n    setUsernickname,\r\n    setBirth,\r\n    setGender,\r\n    setUserId,\r\n    setPassword,\r\n    setState,\r\n    handleSave,\r\n  };\r\n};\r\n\r\nexport default useUserData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}