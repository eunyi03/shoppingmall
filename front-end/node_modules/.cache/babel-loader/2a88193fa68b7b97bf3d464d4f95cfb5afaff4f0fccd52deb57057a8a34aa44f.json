{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import CRUDHeader from './CRUDHeader';\n// import './CRUD.css';\n// import axios from 'axios';\n// function UpdateJoy() {\n//   const { no } = useParams();\n//   const navigate = useNavigate();\n//   const [post, setPost] = useState({\n//     title: '',\n//     body: '',\n//   });\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [canEdit, setCanEdit] = useState(false);\n//   useEffect(() => {\n//     axios\n//       .get(`/joy/Postview/${no}/process/update`)\n//       .then((response) => {\n//         const { title, content } = response.data;\n//         setPost({ title, body: content });\n//         setLoading(false);\n//         setCanEdit(true);\n//       })\n//       .catch((error) => {\n//         if (error.response && error.response.status === 403) {\n//           alert('수정 권한이 없습니다.');\n//           navigate(`/joy/PostView/${no}`);\n//         } else {\n//           console.error('게시글을 불러오는 중 오류가 발생했습니다!', error);\n//           setError('게시글을 불러오는 중 오류가 발생했습니다!');\n//           setLoading(false);\n//         }\n//       });\n//   }, [no, navigate]);\n//   const onChange = (event) => {\n//     const { value, name } = event.target;\n//     console.log(`name: ${name}, value: ${value}`);\n//     setPost({\n//       ...post,\n//       [name]: value,\n//     });\n//   };\n//   const updatePost = async (event) => {\n//     event.preventDefault();\n//     try {\n//       await axios.post(`/joy/Postview/${no}/process/update`, { title: post.title, content: post.body });\n//       alert('수정되었습니다.');\n//       navigate(`/joy/PostView/${no}`);\n//     } catch (error) {\n//       if (error.response && error.response.status === 403) {\n//         alert('수정 권한이 없습니다.');\n//         navigate(`/joy/PostView/${no}`);\n//       } else {\n//         console.error('게시글을 수정하는 중 오류가 발생했습니다:', error);\n//         alert('게시글을 수정하는 중 오류가 발생했습니다:');\n//       }\n//     }\n//   };\n//   const backToList = () => {\n//     navigate(`/joy/PostView/${no}`);\n//   };\n//   if (loading) {\n//     return <div>로딩 중...</div>;\n//   }\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n//   if (!canEdit) {\n//     return <div>수정 권한이 없습니다.</div>; // 수정 권한이 없을 때 보여줄 내용\n//   }\n//   return (\n//     <>\n//       <div>\n//         <CRUDHeader title=\"기쁨이 글수정\" />\n//       </div>\n//       <form onSubmit={updatePost}>\n//         <div>\n//           <span>제목</span>\n//           <input type=\"text\" name=\"title\" placeholder=\"제목\" value={post.title} onChange={onChange} />\n//         </div>\n//         <br />\n//         <div>\n//           <span>내용</span>\n//           <textarea name=\"body\" placeholder=\"내용\" value={post.body} onChange={onChange}></textarea>\n//         </div>\n//         <br />\n//         <button type=\"button\" onClick={backToList}>\n//           취소\n//         </button>\n//         <input type=\"submit\" value=\"수정하기\"></input>\n//       </form>\n//     </>\n//   );\n// }\n// export default UpdateJoy;\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import CRUDHeader from './CRUDHeader';\n// import './CRUD.css';\n// import axios from 'axios';\n// function UpdateJoy() {\n//   const { no } = useParams();\n//   const navigate = useNavigate();\n//   const [post, setPost] = useState({\n//     title: '',\n//     body: '',\n//   });\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [canEdit, setCanEdit] = useState(false);\n//   useEffect(() => {\n//     axios\n//       .get(`/joy/Postview/${no}/process/update`)\n//       .then((response) => {\n//         const { title, content } = response.data;\n//         setPost({ title, body: content });\n//         setLoading(false);\n//         setCanEdit(true);\n//       })\n//       .catch((error) => {\n//         if (error.response && error.response.status === 403) {\n//           alert('수정 권한이 없습니다.');\n//           navigate(`/joy/PostView/${no}`);\n//         } else {\n//           console.error('게시글을 불러오는 중 오류가 발생했습니다!', error);\n//           setError('게시글을 불러오는 중 오류가 발생했습니다!');\n//           setLoading(false);\n//         }\n//       });\n//   }, [no, navigate]);\n//   const onChange = (event) => {\n//     const { value, name } = event.target;\n//     setPost({\n//       ...post,\n//       [name]: value,\n//     });\n//   };\n//   const onFileChange = (event) => {\n//     setFile(event.target.files[0]);\n//   };\n//   const updatePost = async (event) => {\n//     event.preventDefault();\n//     const formData = new FormData();\n//     formData.append('title', post.title);\n//     formData.append('content', post.body);\n//     if (file) {\n//       formData.append('file', file);\n//     }\n//     try {\n//       await axios.post(`/joy/Postview/${no}/process/update`, formData, {\n//         withCredentials: true,\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       alert('수정되었습니다.');\n//       navigate(`/joy/PostView/${no}`);\n//     } catch (error) {\n//       if (error.response && error.response.status === 403) {\n//         alert('수정 권한이 없습니다.');\n//         navigate(`/joy/PostView/${no}`);\n//       } else {\n//         console.error('게시글을 수정하는 중 오류가 발생했습니다:', error);\n//         alert('게시글을 수정하는 중 오류가 발생했습니다:');\n//       }\n//     }\n//   };\n//   const backToList = () => {\n//     navigate(`/joy/PostView/${no}`);\n//   };\n//   if (loading) {\n//     return <div>로딩 중...</div>;\n//   }\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n//   if (!canEdit) {\n//     return <div>수정 권한이 없습니다.</div>;\n//   }\n//   return (\n//     <>\n//       <div>\n//         <CRUDHeader title=\"기쁨이 글수정\" />\n//       </div>\n//       <form onSubmit={updatePost}>\n//         <div>\n//           <span>제목</span>\n//           <input type=\"text\" name=\"title\" placeholder=\"제목\" value={post.title} onChange={onChange} />\n//         </div>\n//         <br />\n//         <div>\n//           <span>내용</span>\n//           <textarea name=\"body\" placeholder=\"내용\" value={post.body} onChange={onChange}></textarea>\n//         </div>\n//         <br />\n//         <div>\n//           <span>사진 업로드</span>\n//           <input type=\"file\" onChange={onFileChange} />\n//         </div>\n//         <br />\n//         <button type=\"button\" onClick={backToList}>\n//           취소\n//         </button>\n//         <input type=\"submit\" value=\"수정하기\"></input>\n//       </form>\n//     </>\n//   );\n// }\n// export default UpdateJoy;\nimport React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import CRUDHeader from'./CRUDHeader';import'./CRUD.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function UpdateJoy(){const{no}=useParams();const navigate=useNavigate();const[post,setPost]=useState({title:'',body:'',file_data:null});const[file,setFile]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[canEdit,setCanEdit]=useState(false);useEffect(()=>{axios.get(\"/joy/Postview/\".concat(no,\"/process/update\")).then(response=>{const{title,content,file_data}=response.data;setPost({title,body:content,file_data});setLoading(false);setCanEdit(true);}).catch(error=>{if(error.response&&error.response.status===403){alert('수정 권한이 없습니다.');navigate(\"/joy/PostView/\".concat(no));}else{console.error('게시글을 불러오는 중 오류가 발생했습니다!',error);setError('게시글을 불러오는 중 오류가 발생했습니다!');setLoading(false);}});},[no,navigate]);const onChange=event=>{const{value,name}=event.target;setPost({...post,[name]:value});};const onFileChange=event=>{setFile(event.target.files[0]);};const updatePost=async event=>{event.preventDefault();const formData=new FormData();formData.append('title',post.title);formData.append('content',post.body);if(file){formData.append('file',file);}try{await axios.post(\"/joy/Postview/\".concat(no,\"/process/update\"),formData,{withCredentials:true,headers:{'Content-Type':'multipart/form-data'}});alert('수정되었습니다.');navigate(\"/joy/PostView/\".concat(no));}catch(error){if(error.response&&error.response.status===403){alert('수정 권한이 없습니다.');navigate(\"/joy/PostView/\".concat(no));}else{console.error('게시글을 수정하는 중 오류가 발생했습니다:',error);alert('게시글을 수정하는 중 오류가 발생했습니다:');}}};const backToList=()=>{navigate(\"/joy/PostView/\".concat(no));};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"\\uB85C\\uB529 \\uC911...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{children:error});}if(!canEdit){return/*#__PURE__*/_jsx(\"div\",{children:\"\\uC218\\uC815 \\uAD8C\\uD55C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CRUDHeader,{title:\"\\uAE30\\uC068\\uC774 \\uAE00\\uC218\\uC815\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:updatePost,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",placeholder:\"\\uC81C\\uBAA9\",value:post.title,onChange:onChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uB0B4\\uC6A9\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"body\",placeholder:\"\\uB0B4\\uC6A9\",value:post.body,onChange:onChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD604\\uC7AC \\uC5C5\\uB85C\\uB4DC\\uB41C \\uD30C\\uC77C\"}),post.file_data?/*#__PURE__*/_jsx(\"img\",{src:\"data:image/jpeg;base64,\".concat(post.file_data),alt:\"Current Upload\",width:\"200\"}):/*#__PURE__*/_jsx(\"p\",{children:\"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uD30C\\uC77C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uC0C8\\uB85C\\uC6B4 \\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:onFileChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:backToList,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"\\uC218\\uC815\\uD558\\uAE30\"})]})]});}export default UpdateJoy;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","CRUDHeader","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UpdateJoy","no","navigate","post","setPost","title","body","file_data","file","setFile","loading","setLoading","error","setError","canEdit","setCanEdit","get","concat","then","response","content","data","catch","status","alert","console","onChange","event","value","name","target","onFileChange","files","updatePost","preventDefault","formData","FormData","append","withCredentials","headers","backToList","children","onSubmit","type","placeholder","src","alt","width","onClick"],"sources":["C:/camputhon_practice/project2-검색/front-end/src/components/community/CRUD/UpdateJoy.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import CRUDHeader from './CRUDHeader';\r\n// import './CRUD.css';\r\n// import axios from 'axios';\r\n\r\n// function UpdateJoy() {\r\n//   const { no } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [post, setPost] = useState({\r\n//     title: '',\r\n//     body: '',\r\n//   });\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [canEdit, setCanEdit] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`/joy/Postview/${no}/process/update`)\r\n//       .then((response) => {\r\n//         const { title, content } = response.data;\r\n//         setPost({ title, body: content });\r\n//         setLoading(false);\r\n//         setCanEdit(true);\r\n//       })\r\n//       .catch((error) => {\r\n//         if (error.response && error.response.status === 403) {\r\n//           alert('수정 권한이 없습니다.');\r\n//           navigate(`/joy/PostView/${no}`);\r\n//         } else {\r\n//           console.error('게시글을 불러오는 중 오류가 발생했습니다!', error);\r\n//           setError('게시글을 불러오는 중 오류가 발생했습니다!');\r\n//           setLoading(false);\r\n//         }\r\n//       });\r\n//   }, [no, navigate]);\r\n\r\n//   const onChange = (event) => {\r\n//     const { value, name } = event.target;\r\n//     console.log(`name: ${name}, value: ${value}`);\r\n//     setPost({\r\n//       ...post,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const updatePost = async (event) => {\r\n//     event.preventDefault();\r\n//     try {\r\n//       await axios.post(`/joy/Postview/${no}/process/update`, { title: post.title, content: post.body });\r\n//       alert('수정되었습니다.');\r\n//       navigate(`/joy/PostView/${no}`);\r\n//     } catch (error) {\r\n//       if (error.response && error.response.status === 403) {\r\n//         alert('수정 권한이 없습니다.');\r\n//         navigate(`/joy/PostView/${no}`);\r\n//       } else {\r\n//         console.error('게시글을 수정하는 중 오류가 발생했습니다:', error);\r\n//         alert('게시글을 수정하는 중 오류가 발생했습니다:');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const backToList = () => {\r\n//     navigate(`/joy/PostView/${no}`);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>로딩 중...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n//   if (!canEdit) {\r\n//     return <div>수정 권한이 없습니다.</div>; // 수정 권한이 없을 때 보여줄 내용\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <CRUDHeader title=\"기쁨이 글수정\" />\r\n//       </div>\r\n//       <form onSubmit={updatePost}>\r\n//         <div>\r\n//           <span>제목</span>\r\n//           <input type=\"text\" name=\"title\" placeholder=\"제목\" value={post.title} onChange={onChange} />\r\n//         </div>\r\n//         <br />\r\n//         <div>\r\n//           <span>내용</span>\r\n//           <textarea name=\"body\" placeholder=\"내용\" value={post.body} onChange={onChange}></textarea>\r\n//         </div>\r\n//         <br />\r\n//         <button type=\"button\" onClick={backToList}>\r\n//           취소\r\n//         </button>\r\n//         <input type=\"submit\" value=\"수정하기\"></input>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default UpdateJoy;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import CRUDHeader from './CRUDHeader';\r\n// import './CRUD.css';\r\n// import axios from 'axios';\r\n\r\n// function UpdateJoy() {\r\n//   const { no } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [post, setPost] = useState({\r\n//     title: '',\r\n//     body: '',\r\n//   });\r\n//   const [file, setFile] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [canEdit, setCanEdit] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`/joy/Postview/${no}/process/update`)\r\n//       .then((response) => {\r\n//         const { title, content } = response.data;\r\n//         setPost({ title, body: content });\r\n//         setLoading(false);\r\n//         setCanEdit(true);\r\n//       })\r\n//       .catch((error) => {\r\n//         if (error.response && error.response.status === 403) {\r\n//           alert('수정 권한이 없습니다.');\r\n//           navigate(`/joy/PostView/${no}`);\r\n//         } else {\r\n//           console.error('게시글을 불러오는 중 오류가 발생했습니다!', error);\r\n//           setError('게시글을 불러오는 중 오류가 발생했습니다!');\r\n//           setLoading(false);\r\n//         }\r\n//       });\r\n//   }, [no, navigate]);\r\n\r\n//   const onChange = (event) => {\r\n//     const { value, name } = event.target;\r\n//     setPost({\r\n//       ...post,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const onFileChange = (event) => {\r\n//     setFile(event.target.files[0]);\r\n//   };\r\n\r\n//   const updatePost = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('title', post.title);\r\n//     formData.append('content', post.body);\r\n//     if (file) {\r\n//       formData.append('file', file);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.post(`/joy/Postview/${no}/process/update`, formData, {\r\n//         withCredentials: true,\r\n//         headers: {\r\n//           'Content-Type': 'multipart/form-data',\r\n//         },\r\n//       });\r\n//       alert('수정되었습니다.');\r\n//       navigate(`/joy/PostView/${no}`);\r\n//     } catch (error) {\r\n//       if (error.response && error.response.status === 403) {\r\n//         alert('수정 권한이 없습니다.');\r\n//         navigate(`/joy/PostView/${no}`);\r\n//       } else {\r\n//         console.error('게시글을 수정하는 중 오류가 발생했습니다:', error);\r\n//         alert('게시글을 수정하는 중 오류가 발생했습니다:');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const backToList = () => {\r\n//     navigate(`/joy/PostView/${no}`);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>로딩 중...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n//   if (!canEdit) {\r\n//     return <div>수정 권한이 없습니다.</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <CRUDHeader title=\"기쁨이 글수정\" />\r\n//       </div>\r\n//       <form onSubmit={updatePost}>\r\n//         <div>\r\n//           <span>제목</span>\r\n//           <input type=\"text\" name=\"title\" placeholder=\"제목\" value={post.title} onChange={onChange} />\r\n//         </div>\r\n//         <br />\r\n//         <div>\r\n//           <span>내용</span>\r\n//           <textarea name=\"body\" placeholder=\"내용\" value={post.body} onChange={onChange}></textarea>\r\n//         </div>\r\n//         <br />\r\n//         <div>\r\n//           <span>사진 업로드</span>\r\n//           <input type=\"file\" onChange={onFileChange} />\r\n//         </div>\r\n//         <br />\r\n//         <button type=\"button\" onClick={backToList}>\r\n//           취소\r\n//         </button>\r\n//         <input type=\"submit\" value=\"수정하기\"></input>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default UpdateJoy;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport CRUDHeader from './CRUDHeader';\r\nimport './CRUD.css';\r\nimport axios from 'axios';\r\n\r\nfunction UpdateJoy() {\r\n  const { no } = useParams();\r\n  const navigate = useNavigate();\r\n  const [post, setPost] = useState({\r\n    title: '',\r\n    body: '',\r\n    file_data: null,\r\n  });\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [canEdit, setCanEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/joy/Postview/${no}/process/update`)\r\n      .then((response) => {\r\n        const { title, content, file_data } = response.data;\r\n        setPost({ title, body: content, file_data });\r\n        setLoading(false);\r\n        setCanEdit(true);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.status === 403) {\r\n          alert('수정 권한이 없습니다.');\r\n          navigate(`/joy/PostView/${no}`);\r\n        } else {\r\n          console.error('게시글을 불러오는 중 오류가 발생했습니다!', error);\r\n          setError('게시글을 불러오는 중 오류가 발생했습니다!');\r\n          setLoading(false);\r\n        }\r\n      });\r\n  }, [no, navigate]);\r\n\r\n  const onChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setPost({\r\n      ...post,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const updatePost = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', post.title);\r\n    formData.append('content', post.body);\r\n    if (file) {\r\n      formData.append('file', file);\r\n    }\r\n\r\n    try {\r\n      await axios.post(`/joy/Postview/${no}/process/update`, formData, {\r\n        withCredentials: true,\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      alert('수정되었습니다.');\r\n      navigate(`/joy/PostView/${no}`);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        alert('수정 권한이 없습니다.');\r\n        navigate(`/joy/PostView/${no}`);\r\n      } else {\r\n        console.error('게시글을 수정하는 중 오류가 발생했습니다:', error);\r\n        alert('게시글을 수정하는 중 오류가 발생했습니다:');\r\n      }\r\n    }\r\n  };\r\n\r\n  const backToList = () => {\r\n    navigate(`/joy/PostView/${no}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n  if (!canEdit) {\r\n    return <div>수정 권한이 없습니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <CRUDHeader title=\"기쁨이 글수정\" />\r\n      </div>\r\n      <form onSubmit={updatePost}>\r\n        <div>\r\n          <span>제목</span>\r\n          <input type=\"text\" name=\"title\" placeholder=\"제목\" value={post.title} onChange={onChange} />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <span>내용</span>\r\n          <textarea name=\"body\" placeholder=\"내용\" value={post.body} onChange={onChange}></textarea>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <span>현재 업로드된 파일</span>\r\n          {post.file_data ? (\r\n            <img src={`data:image/jpeg;base64,${post.file_data}`} alt=\"Current Upload\" width=\"200\" />\r\n          ) : (\r\n            <p>업로드된 파일이 없습니다.</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <span>새로운 파일 업로드</span>\r\n          <input type=\"file\" onChange={onFileChange} />\r\n        </div>\r\n        <br />\r\n        <button type=\"button\" onClick={backToList}>\r\n          취소\r\n        </button>\r\n        <input type=\"submit\" value=\"수정하기\"></input>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateJoy;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}