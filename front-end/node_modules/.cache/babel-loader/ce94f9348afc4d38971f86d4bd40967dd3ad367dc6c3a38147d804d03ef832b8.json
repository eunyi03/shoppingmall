{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useLocation}from'react-router-dom';import axios from'axios';import TitleBodyCommunity from'./element/TitleBodyCommunity.js';import SelectButtonCommunity from'./element/SelectButtonCommunity.js';import ListCommunity from'./element/ListCommunity.js';import ColumnListCommunity from'./element/ColumnListCommunity.js';import RowListCommunity from'./element/RowListCommunity.js';import CreateButtonCommunity from'./element/CreateButtonCommunity.js';import PaginationCustom from'./element/PaginationCustom.js';import'./Community.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const JoyCommunity=()=>{const[dataList,setDataList]=useState([]);const[currentPage,setCurrentPage]=useState(1);const postsPerPage=10;const location=useLocation();const fetchData=()=>{// 백엔드에서 게시글 목록을 가져옴\naxios.post('/community/joy').then(response=>{console.log('응답 데이터:',response.data);// 응답 데이터 출력\nsetDataList(response.data);}).catch(error=>{console.error('There was an error fetching the posts!',error);});};useEffect(()=>{fetchData();},[]);useEffect(()=>{if(location.state&&location.state.newPost){console.log('새 게시글 추가:',location.state.newPost);setDataList(prevDataList=>[location.state.newPost,...prevDataList]);}},[location.state]);const getNextNo=()=>{return dataList.length>0?Math.max(...dataList.map(post=>post.no))+1:1;};const indexOfLastPost=currentPage*postsPerPage;const indexOfFirstPost=indexOfLastPost-postsPerPage;const currentPosts=dataList.slice(indexOfFirstPost,indexOfLastPost);const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"CommunityAll_layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"CommunityTop_layout\",children:[/*#__PURE__*/_jsx(TitleBodyCommunity,{title:\"\\uAE30\\uC068\\uC774\",body:\"\\uBCF8\\uC778\\uC758 \\uCC4C\\uB9B0\\uC9C0 \\uBC0F \\uCE58\\uB8CC \\uD6C4\\uAE30\\uB97C \\uC801\\uC5B4\\uC8FC\\uC138\\uC694!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"SelectButtonCommunity_layout\",children:/*#__PURE__*/_jsx(SelectButtonCommunity,{})})]}),/*#__PURE__*/_jsx(ListCommunity,{headersName:['제목','작성자','작성일','좋아요'],children:currentPosts.map((item,index)=>/*#__PURE__*/_jsxs(RowListCommunity,{children:[/*#__PURE__*/_jsx(ColumnListCommunity,{children:/*#__PURE__*/_jsx(Link,{to:\"/joy/read/\".concat(item.no),style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(\"div\",{className:\"List_title\",children:item.title})})}),/*#__PURE__*/_jsx(ColumnListCommunity,{children:item.nickname}),/*#__PURE__*/_jsx(ColumnListCommunity,{children:item.created_date}),/*#__PURE__*/_jsx(ColumnListCommunity,{children:item.viewCount})]},index))}),/*#__PURE__*/_jsx(CreateButtonCommunity,{emotion:\"joy\",nextNo:getNextNo()}),/*#__PURE__*/_jsx(\"div\",{className:\"PaginationCustom\",children:/*#__PURE__*/_jsx(PaginationCustom,{currentPage:currentPage,totalPages:Math.ceil(dataList.length/postsPerPage),onPageChange:handlePageChange})})]})});};export default JoyCommunity;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","axios","TitleBodyCommunity","SelectButtonCommunity","ListCommunity","ColumnListCommunity","RowListCommunity","CreateButtonCommunity","PaginationCustom","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","JoyCommunity","dataList","setDataList","currentPage","setCurrentPage","postsPerPage","location","fetchData","post","then","response","console","log","data","catch","error","state","newPost","prevDataList","getNextNo","length","Math","max","map","no","indexOfLastPost","indexOfFirstPost","currentPosts","slice","handlePageChange","pageNumber","children","className","title","body","headersName","item","index","to","concat","style","textDecoration","nickname","created_date","viewCount","emotion","nextNo","totalPages","ceil","onPageChange"],"sources":["C:/Users/atwod/OneDrive/바탕 화면/동국대 폴더/백엔드 공부/실전 2차/HackathonProject2_OutsideIn_UPGRADED/front-end/src/components/community/JoyCommunity.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport TitleBodyCommunity from './element/TitleBodyCommunity.js';\r\nimport SelectButtonCommunity from './element/SelectButtonCommunity.js';\r\nimport ListCommunity from './element/ListCommunity.js';\r\nimport ColumnListCommunity from './element/ColumnListCommunity.js';\r\nimport RowListCommunity from './element/RowListCommunity.js';\r\nimport CreateButtonCommunity from './element/CreateButtonCommunity.js';\r\nimport PaginationCustom from './element/PaginationCustom.js';\r\n\r\nimport './Community.css';\r\n\r\nconst JoyCommunity = () => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 10;\r\n  const location = useLocation();\r\n\r\n  const fetchData = () => {\r\n    // 백엔드에서 게시글 목록을 가져옴\r\n    axios\r\n      .post('/community/joy')\r\n      .then((response) => {\r\n        console.log('응답 데이터:', response.data); // 응답 데이터 출력\r\n        setDataList(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error fetching the posts!', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.newPost) {\r\n      console.log('새 게시글 추가:', location.state.newPost);\r\n      setDataList((prevDataList) => [location.state.newPost, ...prevDataList]);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const getNextNo = () => {\r\n    return dataList.length > 0 ? Math.max(...dataList.map((post) => post.no)) + 1 : 1;\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"CommunityAll_layout\">\r\n        <div className=\"CommunityTop_layout\">\r\n          <TitleBodyCommunity title=\"기쁨이\" body=\"본인의 챌린지 및 치료 후기를 적어주세요!\" />\r\n          <div className=\"SelectButtonCommunity_layout\">\r\n            <SelectButtonCommunity />\r\n          </div>\r\n        </div>\r\n        <ListCommunity headersName={['제목', '작성자', '작성일', '좋아요']}>\r\n          {currentPosts.map((item, index) => (\r\n            <RowListCommunity key={index}>\r\n              <ColumnListCommunity>\r\n                <Link to={`/joy/read/${item.no}`} style={{ textDecoration: 'none' }}>\r\n                  <div className=\"List_title\">{item.title}</div>\r\n                </Link>\r\n              </ColumnListCommunity>\r\n              <ColumnListCommunity>{item.nickname}</ColumnListCommunity>\r\n              <ColumnListCommunity>{item.created_date}</ColumnListCommunity>\r\n              <ColumnListCommunity>{item.viewCount}</ColumnListCommunity>\r\n            </RowListCommunity>\r\n          ))}\r\n        </ListCommunity>\r\n        <CreateButtonCommunity emotion=\"joy\" nextNo={getNextNo()} />\r\n        <div className=\"PaginationCustom\">\r\n          <PaginationCustom\r\n            currentPage={currentPage}\r\n            totalPages={Math.ceil(dataList.length / postsPerPage)}\r\n            onPageChange={handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoyCommunity;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}