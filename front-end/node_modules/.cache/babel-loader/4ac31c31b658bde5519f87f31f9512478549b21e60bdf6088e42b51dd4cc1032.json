{"ast":null,"code":"import{useState,useEffect}from\"react\";import axios from\"axios\";import sadnessImg from\"./images/sadness.png\";import anxietyImg from\"./images/anxiety.png\";import fearImg from\"./images/fear.png\";import mypageUser from\"./images/mypageuser.png\";const useUserData=function(){let initialData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const[firstName,setFirstName]=useState(initialData.firstName||\"\");const[lastName,setLastName]=useState(initialData.lastName||\"\");const[usernickname,setUsernickname]=useState(initialData.usernickname||\"\");const[birth,setBirth]=useState(initialData.birth||\"\");const[gender,setGender]=useState(initialData.gender||\"\");const[userId,setUserId]=useState(initialData.userId||\"\");const[password,setPassword]=useState(initialData.password||\"\");const[state,setState]=useState(initialData.state||\"\");const[roomid,setroomid]=useState(initialData.roomid||\"\");const[profileImage,setProfileImage]=useState(mypageUser);// 프로필 이미지 초기값 : mypageUser로 설정해둠\nconst fetchUserData=async()=>{try{// 사용자가 로그인한 후 호출 (유저정보 가져오기)\nconst response=await axios.post(\"/mypage\");const userData=response.data;setFirstName(userData.Lastname||\"\");setLastName(userData.Firstname||\"\");setUsernickname(userData.nickname||\"\");setBirth(userData.birth||\"\");setGender(userData.gender||\"\");setUserId(userData.id||\"\");// 아이디 값 변경 불가\nsetPassword(userData.password||\"\");setState(userData.state||\"\");setroomid(userData.roomid||\"\");setProfileImage(getProfileImage(userData.state));}catch(error){console.error(\"사용자 데이터를 가져오는 중 오류 발생:\",error);}try{// 사용자가 로그인한 후 호출 (유저정보 가져오기)\nconst response=await axios.post(\"/process/hospital\");const userData=response.data;setUsernickname(userData.nickname||\"\");setUserId(userData.id||\"\");// 아이디 값 변경 불가\n}catch(error){console.error(\"/hospital에서 사용자 데이터를 가져오는 중 오류 발생:\",error);}};const getProfileImage=state=>{switch(state){case\"우울\":return sadnessImg;case\"불안\":return anxietyImg;case\"강박\":return fearImg;default:return mypageUser;}};// 초기 유저정보 가져옴\nuseEffect(()=>{fetchUserData();},[]);const handleSave=async()=>{try{const updateData={lastName,firstName,gender,birth,nickname:usernickname,id:userId,password,roomid,state};// 정보 수정 시 데이터 전달 경로\nconsole.log(\"Sending update data:\",updateData);const response=await axios.post(\"/mypage/process/update\",updateData);if(response.status===200){alert(\"변경사항이 저장되었습니다.\");}else{fetchUserData();// 변경사항 저장 후 유저정보를 다시 불러옴\nthrow new Error(response.data.message);}}catch(error){console.error(\"변경사항을 저장하는 데 오류가 발생했습니다:\",error);alert(\"변경사항을 저장하는 데 오류가 발생했습니다.\");}};return{firstName,lastName,usernickname,birth,gender,userId,password,roomid,state,profileImage,setFirstName,setLastName,setUsernickname,setBirth,setGender,setUserId,setPassword,setroomid,setState,setProfileImage,handleSave,fetchUserData};};export default useUserData;","map":{"version":3,"names":["useState","useEffect","axios","sadnessImg","anxietyImg","fearImg","mypageUser","useUserData","initialData","arguments","length","undefined","firstName","setFirstName","lastName","setLastName","usernickname","setUsernickname","birth","setBirth","gender","setGender","userId","setUserId","password","setPassword","state","setState","roomid","setroomid","profileImage","setProfileImage","fetchUserData","response","post","userData","data","Lastname","Firstname","nickname","id","getProfileImage","error","console","handleSave","updateData","log","status","alert","Error","message"],"sources":["/Users/eunyi/Documents/3-2/DB/shop/front-end/src/components/useUserData.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport sadnessImg from \"./images/sadness.png\";\nimport anxietyImg from \"./images/anxiety.png\";\nimport fearImg from \"./images/fear.png\";\nimport mypageUser from \"./images/mypageuser.png\";\n\nconst useUserData = (initialData = {}) => {\n  const [firstName, setFirstName] = useState(initialData.firstName || \"\");\n  const [lastName, setLastName] = useState(initialData.lastName || \"\");\n  const [usernickname, setUsernickname] = useState(\n    initialData.usernickname || \"\"\n  );\n  const [birth, setBirth] = useState(initialData.birth || \"\");\n  const [gender, setGender] = useState(initialData.gender || \"\");\n  const [userId, setUserId] = useState(initialData.userId || \"\");\n  const [password, setPassword] = useState(initialData.password || \"\");\n  const [state, setState] = useState(initialData.state || \"\");\n  const [roomid, setroomid] = useState(initialData.roomid || \"\");\n  const [profileImage, setProfileImage] = useState(mypageUser); // 프로필 이미지 초기값 : mypageUser로 설정해둠\n\n  const fetchUserData = async () => {\n    try {\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\n      const response = await axios.post(\"/mypage\");\n      const userData = response.data;\n\n      setFirstName(userData.Lastname || \"\");\n      setLastName(userData.Firstname || \"\");\n      setUsernickname(userData.nickname || \"\");\n      setBirth(userData.birth || \"\");\n      setGender(userData.gender || \"\");\n      setUserId(userData.id || \"\"); // 아이디 값 변경 불가\n      setPassword(userData.password || \"\");\n      setState(userData.state || \"\");\n      setroomid(userData.roomid || \"\");\n      setProfileImage(getProfileImage(userData.state));\n    } catch (error) {\n      console.error(\"사용자 데이터를 가져오는 중 오류 발생:\", error);\n    }\n    try {\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\n      const response = await axios.post(\"/process/hospital\");\n      const userData = response.data;\n      setUsernickname(userData.nickname || \"\");\n      setUserId(userData.id || \"\"); // 아이디 값 변경 불가\n    } catch (error) {\n      console.error(\n        \"/hospital에서 사용자 데이터를 가져오는 중 오류 발생:\",\n        error\n      );\n    }\n  };\n\n  const getProfileImage = (state) => {\n    switch (state) {\n      case \"우울\":\n        return sadnessImg;\n      case \"불안\":\n        return anxietyImg;\n      case \"강박\":\n        return fearImg;\n      default:\n        return mypageUser;\n    }\n  };\n\n  // 초기 유저정보 가져옴\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  const handleSave = async () => {\n    try {\n      const updateData = {\n        lastName,\n        firstName,\n        gender,\n        birth,\n        nickname: usernickname,\n        id: userId,\n        password,\n        roomid,\n        state,\n      };\n\n      // 정보 수정 시 데이터 전달 경로\n      console.log(\"Sending update data:\", updateData);\n      const response = await axios.post(\"/mypage/process/update\", updateData);\n\n      if (response.status === 200) {\n        alert(\"변경사항이 저장되었습니다.\");\n      } else {\n        fetchUserData(); // 변경사항 저장 후 유저정보를 다시 불러옴\n        throw new Error(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"변경사항을 저장하는 데 오류가 발생했습니다:\", error);\n      alert(\"변경사항을 저장하는 데 오류가 발생했습니다.\");\n    }\n  };\n\n  return {\n    firstName,\n    lastName,\n    usernickname,\n    birth,\n    gender,\n    userId,\n    password,\n    roomid,\n    state,\n    profileImage,\n    setFirstName,\n    setLastName,\n    setUsernickname,\n    setBirth,\n    setGender,\n    setUserId,\n    setPassword,\n    setroomid,\n    setState,\n    setProfileImage,\n    handleSave,\n    fetchUserData,\n  };\n};\n\nexport default useUserData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}