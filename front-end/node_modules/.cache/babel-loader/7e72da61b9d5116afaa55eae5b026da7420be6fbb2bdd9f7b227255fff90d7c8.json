{"ast":null,"code":"var _jsxFileName = \"/Users/iyeeun/Documents/shop/front-end/src/components/chat/mainChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chat from './Chat';\nimport ChatRoom from './Chatroom';\nimport './mainChat.css';\nimport useUserData from '../useUserData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainChat = () => {\n  _s();\n  const [selectedRoomId, setSelectedRoomId] = useState(null);\n  const {\n    roomid\n  } = useUserData();\n  useEffect(() => {\n    const handleMessage = event => {\n      if (event.data && event.data.roomId) {\n        setSelectedRoomId(event.data.roomId);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  // const handleSelectRoom = (roomid, selectedRoomId) => {\n  //   setSelectedRoomId(roomid);\n  //   // 채팅 목록을 클릭할 때마다 채팅 창의 src 업데이트\n  //   // navigate(`/Chatroom/${roomid}/to/${selectedRoomId}`);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatmainpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatListContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"Chat List\",\n          src: `/process/chat?roomid=${roomid}`,\n          className: \"iframe-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatRoomContainer\",\n        children: selectedRoomId ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"Chat Room\",\n          src: `/Chatroom/${roomid}/to/${selectedRoomId}`,\n          className: \"iframe-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: \"\\uCC44\\uD305\\uC744 \\uC2DC\\uC791\\uD558\\uB824\\uBA74 \\uC0AC\\uC6A9\\uC790\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MainChat, \"1NRXoSfNku06DS1q9DVJJ0l3cNU=\", false, function () {\n  return [useUserData];\n});\n_c = MainChat;\nexport default MainChat;\nvar _c;\n$RefreshReg$(_c, \"MainChat\");","map":{"version":3,"names":["React","useState","useEffect","Chat","ChatRoom","useUserData","jsxDEV","_jsxDEV","MainChat","_s","selectedRoomId","setSelectedRoomId","roomid","handleMessage","event","data","roomId","window","addEventListener","removeEventListener","className","children","title","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/iyeeun/Documents/shop/front-end/src/components/chat/mainChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chat from './Chat';\nimport ChatRoom from './Chatroom';\nimport './mainChat.css';\nimport useUserData from '../useUserData';\n\nconst MainChat = () => {\n  const [selectedRoomId, setSelectedRoomId] = useState(null);\n  const { roomid } = useUserData();\n\n  useEffect(() => {\n    const handleMessage = (event) => {\n      if (event.data && event.data.roomId) {\n        setSelectedRoomId(event.data.roomId);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  // const handleSelectRoom = (roomid, selectedRoomId) => {\n  //   setSelectedRoomId(roomid);\n  //   // 채팅 목록을 클릭할 때마다 채팅 창의 src 업데이트\n  //   // navigate(`/Chatroom/${roomid}/to/${selectedRoomId}`);\n  // };\n\n  return (\n    <div className=\"chatmainpage\">\n      <div className=\"mainChatContainer\">\n        <div className=\"chatListContainer\">\n          <iframe title=\"Chat List\" src={`/process/chat?roomid=${roomid}`} className=\"iframe-container\" />\n        </div>\n        <div className=\"chatRoomContainer\">\n          {selectedRoomId ? (\n            <iframe title=\"Chat Room\" src={`/Chatroom/${roomid}/to/${selectedRoomId}`} className=\"iframe-container\" />\n          ) : (\n            <div className=\"placeholder\">채팅을 시작하려면 사용자를 선택하세요.</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainChat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM;IAAEW;EAAO,CAAC,GAAGP,WAAW,CAAC,CAAC;EAEhCH,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,MAAM,EAAE;QACnCL,iBAAiB,CAACG,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC;MACtC;IACF,CAAC;IACDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,aAAa,CAAC;IAEjD,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;;EAEA,oBACEN,OAAA;IAAKa,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3Bd,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCd,OAAA;QAAKa,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChCd,OAAA;UAAQe,KAAK,EAAC,WAAW;UAACC,GAAG,EAAE,wBAAwBX,MAAM,EAAG;UAACQ,SAAS,EAAC;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACNpB,OAAA;QAAKa,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BX,cAAc,gBACbH,OAAA;UAAQe,KAAK,EAAC,WAAW;UAACC,GAAG,EAAE,aAAaX,MAAM,OAAOF,cAAc,EAAG;UAACU,SAAS,EAAC;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE1GpB,OAAA;UAAKa,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MACxD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCID,QAAQ;EAAA,QAEOH,WAAW;AAAA;AAAAuB,EAAA,GAF1BpB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}